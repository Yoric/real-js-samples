;(function (root, factory) {
	'use strict';
	if (typeof define === 'function' && define.amd) {   // jshint ignore:line
		// AMD
		define([                                            // jshint ignore:line
			'jquery'
			// ,'optVar'
		], factory);
	} else {
		// Browser globals
		root.skp11 = root.skp11 || {};
		root.skp11.product = root.skp11.product || {};
		root.skp11.product.CustomAddPrd = factory(
			root.jQuery
			// ,root.optVar
		);
	}
}(this, function ($) {
	'use strict';
	var CustomAddPrd;

    var optVar = productOptInfo;

	var AddPrdRecord = function(data) {
		this.compPrdNo = data.compPrdNo;
		this.prdCompNo = data.prdCompNo;
		this.compPrdStckNo = data.compPrdStckNo
		this.addCompPrc = data.addCompPrc;
		this.stckQty = data.stckQty;
		this.amount = data.amount;
		this.addPrc = data.addCompPrc;
		this.addPrdMixNo = data.compPrdNo + ":" + data.prdCompNo;
		this.selAddPrdNm = data.addPrdGrpNm + " / " + data.addPrdCompNm;
		this.addPrdCompNm = data.addPrdCompNm;
	};

	CustomAddPrd = function (optionId, position) {
		// 사용되는 객체
		this.$button = $(optionId);
		this.position = position;
		this.$content = $(this.$button.attr('href'));
		this.$subContent = $(this.$button.data('subTarget'));
		this.$optionBox = $('.prdc_ezop_wrap > .option_listbox > .ui_option_box > .option_box');
		this.$win = $(window);

		// 템플릿 적용 컨텐츠
		this.$templateContent = this.$content.find('.op_list');
	};

	CustomAddPrd.prototype.init = function () {
		var _this = this;

		_this.bind();
	};

	// 옵션 레이어 호출
	CustomAddPrd.prototype.viewOption = function (isOpen, isFocus) {
		var _this = this;
		isFocus = false;
		if (isOpen) {
			if (_this.position === 'top') {
				_this.$content.css({'position': 'absolute', 'top': _this.$button.position().top, 'left': 0});
			} else if (_this.position === 'bottom') {
				_this.$optionBox.hide();
			}
			_this.$content.show();
			if (isFocus) {
				_this.$content.find('a:eq(0)').focus();
			}
		} else {
			if (_this.position === 'bottom') {
				_this.$optionBox.show();
			}
			_this.$content.hide();
			if (isFocus) {
				_this.$button.focus();
			}
		}
		_this.zIndex(_this.$content, isOpen);
	};

	CustomAddPrd.prototype.zIndex = function ($el, isOpen) {
		if (isOpen) {
			// 레이어가 보일때 부모요소들의 zIndex를 같이 올려줌
			$el.parentsUntil('body').filter(function () {
				return $(this).css('position') === 'relative';
			}).addClass('zindex');
		} else {
			// 레이어가 닫힐때 부모요소들의 zIndex를 원래대로 돌림
			$el.parentsUntil('body').filter(function () {
				return $(this).css('position') === 'relative';
			}).removeClass('zindex');
		}
	};

	// 이벤트 바인드
	CustomAddPrd.prototype.bind = function () {
		var _this = this

		// 옵션 버튼
		_this.$button.on('click', function (e) {
			e.preventDefault();

			_this.$win.trigger('optionLayerClose');   // 다른 레이어 닫기
			_this.viewOption(true, true);
			_this.$templateContent.find("dd").hide();

			_this.$win.trigger("callGaEvent","0;"+ (_this.position == "top" ? "12" : "20") +";추가구성 선택");
		});

		// 다른 옵션 레이어가 뜰경우 옵션 레이어를 닫아준다.
		_this.$win.on('optionLayerClose', function () {
			$(document).trigger('infoContentClose');
			_this.viewOption(false, false);
		});

		_this.$content.on('click', 'a.close_btn', function (e) {
			e.preventDefault();

			_this.viewOption(false, true);
		});

		_this.$templateContent.on('click', 'dt > a', function (e) {
			e.preventDefault();
			$(this).parent().siblings('dd')
				.hide()
					.end().next()
						.toggle();
		}).on('click', 'dd > ul > li > a', function (e) {
			e.preventDefault();
			var $this = $(this),
				isEnd = $this.hasClass('end');

			if (isEnd) {
				// alert('품절입니다.');
				return false;
			} else {

				if(_this.chkDuplicateSelAddPrd($this)) {
					return false;
				}
				var addPrdRecord = _this.setAddPrdRecord($this);
				optVar.orderAddPrdArr.push(addPrdRecord);
				addPrdRecord = $.extend({}, {"target": "ui_addPrdSelWrapper"}, _this.getTransSetItemData(addPrdRecord));

				$(window).trigger('setItem', addPrdRecord);
				_this.viewOption(false, true);
			}
		});
	};

	CustomAddPrd.prototype.chkDuplicateSelAddPrd = function($obj){
		for(var i=0,size=optVar.orderAddPrdArr.length;i<size;i++){
			if(optVar.orderAddPrdArr[i].compPrdStckNo == $obj.data("compprdstckno")){
				alert("이미 선택되어 있는 추가구성상품입니다.");
				return true;
			}
		}
		return false;
	};


	CustomAddPrd.prototype.setAddPrdRecord = function($obj){
		var _this = this
			,addPrdData = _this.extractData($obj);

		var addPrdRecord = new AddPrdRecord({
			"compPrdNo" : addPrdData.compprdno
			,"prdCompNo" : addPrdData.prdcompno
			,"compPrdStckNo" : addPrdData.compprdstckno
			,"addPrdGrpNm" : addPrdData.addprdgrpnm
			,"addPrdCompNm" : addPrdData.prdnm
			,"addCompPrc" : addPrdData.addcompprc
			,"stckQty" : addPrdData.stckqty
			,"amount" : 1
		});

		return addPrdRecord;
	};


	CustomAddPrd.prototype.extractData = function ($obj) {
		var dataList = [];

		$.each( $obj, function( key, value ) {
			dataList.push( $(value).data() );
		});

		if(dataList.length == 1) {
			return dataList[0];
		}else{
			return dataList;
		}
	};

	CustomAddPrd.prototype.getTransSetItemData = function (data) {

		var _this = this;
		data.idxMixNo = data.addPrdMixNo;
		data.prdStckNo = data.compPrdStckNo;
		data.stckQty = data.stckQty;
		data.price = data.addCompPrc;
		data.dispNm = "[추가] " + data.addPrdCompNm;
		data.priceTxt = _this.commaFormat(data.price);
		return data;
	};

	CustomAddPrd.prototype.commaFormat = function (num) {
		if (num === 0) {
			return 0;
		}
		var reg = /(^[+-]?\d+)(\d{3})/,
			n = (num + '');

		while (reg.test(n)) {
			n = n.replace(reg, '$1' + ',' + '$2');
		}
		return n;
	};

	return CustomAddPrd;
}));
