(function(){var b,o;try{(function(){var n={L_CollapsedText:"{0} previous stops",L_DirectionsActionText:"Directions",L_LineBackButton:"Return to Transit Stop Details",L_MinEarly:"{0} min early",L_MinLate:"{0} min late",L_NearbyTransitResponseError:"Nearby transit response failed",L_NearbyTransitTitle:"Stops nearby {0}",L_NoDeparturesError:"No departures were found for this date and time.",L_NoStopsError:"No stops were found nearby this location.",L_NoUpcomingTrips:"No upcoming trips",L_RealTime:"real-time",L_Schedule:"Schedule",L_StopAddress:"Address:",L_StopListTitle:"STOPS",L_Stops:"Stops",L_StreetsideText:"Streetside",L_TransitLine_Dropdown_Entry:"{0} to {1}",L_Transit_Error_No_Routes:"We couldn't find any route information for this stop at the selected time.",L_Transit_Error_Request_Failed:"We were unable to retrieve information for this stop.",L_UpcomingTrip:"in {0}",L_Update:"Update",L_UpdatedTime:"now {0}"};window.$MicrosoftMaps8.ResourceManager?window.$MicrosoftMaps8.ResourceManager.init("Transit",n):window.$MicrosoftMaps8.ResourcesObject=n})();var n=window.$MicrosoftMaps8,t=n.Internal,ni=n.Calendar=n.Calendar||{},nr=n.Tasks=n.Tasks||{},nt=n.Transit=n.Transit||{},at=t.TaskData=t.TaskData||{},ut=t.BaseTask,vt=t.BaseTaskViewModel,tr=n.BasicTemplate,ir=t._BoundsAccumulator,rr=t._ComponentNames,u=n.DataHandlerKeys,ur=t.DefaultPrimitiveCriteria,ti=n.DefaultTemplateSelector,fr=n.DetailsTaskPoiManager,ft=at.DirectionsMode,er=n.DirectionsPolyline,y=t._EntryPoints,f=t._Gimme,ii=t._BaseMapTemplateSelector,e=n.GlobalDataEventHandler,et=n.GlobalConfig,i=t._Helper,a=t._JSEvent,or=t._LatLonCrs,ot=n.LocalSearchEntity,ri=t._LoggerConstants,sr=t._LruCache,yt=t.MapHelper,ui=t.MapInteractionBehavior,w=n.Location,hr=n.MapTypeId,k=t._Network,g=t.PushpinIconType,r=n.ResourceManager.Transit,fi=t.RoutePolyline,ei=t.RoutePushpin,st=n.SimplePointPrimitive,cr=ni.SingleCalendar,lr=t.StaticPromise,oi=t._TaskDataHandlerHelper,si=n.TaskPrimitivesZOrderManager,s=n.TaskTypes,h=et.features.transit,hi=n.VectorImageTemplate,ci=n.VectorMapLayer,pt=at.Waypoint,ht=t._MapAuthentication,li='<div class="bm_transitPanel" data-tag="nearbyTransitPanel">    <div class="noStopsError" style:display="{Binding nearbyStops Converter=displayError}">        <p>             <TextBlock Text="{StaticBinding resources.L_NoStopsError}" />        <\/p>    <\/div>    <div style:display="{Binding nearbyStops Converter=displayList}">        <ItemsControl ItemsSource="{Binding nearbyStops}">            <ItemsControl.ItemTemplate>                <DataTemplate>                    <div class="nearbySectionSeparator" data-index="{Binding index}" data-tag="nearbyStop">                        <table>                            <tr>                                <td>                                    <div class="nearbyStopName" data-tag="nearbyStopName">                                        <TextBlock Text="{Binding stopName}" />                                    <\/div>                                <\/td>                                <td>                                    <a href="#" class="nearbyStopWalkTimeBlock" event:click="launchDirectionsCard">                                        <div class="nearbyStopWalkTime" data-tag="nearbyStopWalkTime">                                            <TextBlock Text="{Binding travelTime}" />                                        <\/div>                                        <div class="nearbyStopWalkTimeSeparator"><\/div>                                        <div class="nearbyStopDistance" data-tag="nearbyStopDistance">                                            <TextBlock Text="{Binding distance}" />                                        <\/div>                                    <\/a>                                <\/td>                            <\/tr>                            <tr class="nearbySection" event:mouseenter="onMouseOver" event:mouseleave="onMouseOut" event:click="launchStopCardFromStopElement">                                <a href="#">                                    <td>                                        <ItemsControl ItemsSource="{Binding departingLines}">                                            <ItemsControl.ItemTemplate>                                                <DataTemplate>                                                    <div class="nearbyStopBlock" data-tag="nearbyStopBlock">                                                        <div class="nearbyLineIconBlock">                                                            <span class="{Binding transitType Converter=transitTypeToString}" style:background-color="{Binding lineColor Converter=getLineColor}"><\/span>                                                            <span class="nearbyLineName" data-tag="nearbyLineName">                                                                <TextBlock Text="{Binding name}" />                                                            <\/span>                                                        <\/div>                                                        <div class="nearbyLineHeadSignError" style:display="{Binding headSigns Converter=displayHeadSignError}">                                                            <p>                                                                <TextBlock Text="{StaticBinding resources.L_NoUpcomingTrips}" />                                                            <\/p>                                                        <\/div>                                                        <ItemsControl ItemsSource="{Binding headSigns}">                                                            <ItemsControl.ItemTemplate>                                                                <DataTemplate>                                                                    <table>                                                                        <tr>                                                                            <td>                                                                                <div class="nearbyLineHeadSign" data-tag="nearbyLineHeadSign">                                                                                    <TextBlock Text="{Binding name}" />                                                                                <\/div>                                                                            <\/td>                                                                            <td>                                                                                <div class="nearbyLineNextTime" data-tag="nearbyLineNextTime" style:display="none">                                                                                    <TextBlock Text="{Binding departureTime}" />                                                                                <\/div>                                                                            <\/td>                                                                        <\/tr>                                                                    <\/table>                                                                <\/DataTemplate>                                                            <\/ItemsControl.ItemTemplate>                                                        <\/ItemsControl>                                                    <\/div>                                                <\/DataTemplate>                                            <\/ItemsControl.ItemTemplate>                                        <\/ItemsControl>                                    <\/td>                                <\/a>                            <\/tr>                        <\/table>                    <\/div>                <\/DataTemplate>            <\/ItemsControl.ItemTemplate>        <\/ItemsControl>    <\/div><\/div>',ai='<div class="bm_transitPanel oneMap" data-tag="nearbyTransitPanel">    <div class="noStopsError" style:display="{Binding nearbyStops Converter=displayError}">        <p>             <TextBlock Text="{StaticBinding resources.L_NoStopsError}" />        <\/p>    <\/div>    <div style:display="{Binding nearbyStops Converter=displayList}">        <ItemsControl ItemsSource="{Binding nearbyStops}">            <ItemsControl.ItemTemplate>                <DataTemplate>                    <div class="nearbySectionSeparator" data-index="{Binding index}" data-tag="nearbyStop">                        <table>                            <tr>                                <td>                                    <div class="nearbyStopName" data-tag="nearbyStopName">                                        <TextBlock Text="{Binding stopName}" />                                    <\/div>                                <\/td>                                <td>                                    <a href="#" class="nearbyStopWalkTimeBlock" event:click="launchDirectionsCard">                                        <div class="nearbyStopWalkTime" data-tag="nearbyStopWalkTime">                                            <TextBlock Text="{Binding travelTime}" />                                        <\/div>                                        <div class="nearbyStopWalkTimeSeparator"><\/div>                                        <div class="nearbyStopDistance" data-tag="nearbyStopDistance">                                            <TextBlock Text="{Binding distance}" />                                        <\/div>                                    <\/a>                                <\/td>                            <\/tr>                            <tr class="nearbySection" event:mouseenter="onMouseOver" event:mouseleave="onMouseOut" event:click="launchStopCardFromStopElement">                                <a href="#">                                    <td>                                        <ItemsControl ItemsSource="{Binding departingLines}">                                            <ItemsControl.ItemTemplate>                                                <DataTemplate>                                                    <div class="nearbyStopBlock" data-tag="nearbyStopBlock">                                                        <div class="nearbyLineIconBlock">                                                            <span class="{Binding transitType Converter=transitTypeToString}" style:background-color="{Binding lineColor Converter=getLineColor}"><\/span>                                                            <span class="nearbyLineName" data-tag="nearbyLineName">                                                                <TextBlock Text="{Binding name}" />                                                            <\/span>                                                        <\/div>                                                        <div class="nearbyLineHeadSignError" style:display="{Binding headSigns Converter=displayHeadSignError}">                                                            <p>                                                                <TextBlock Text="{StaticBinding resources.L_NoUpcomingTrips}" />                                                            <\/p>                                                        <\/div>                                                        <ItemsControl ItemsSource="{Binding headSigns}">                                                            <ItemsControl.ItemTemplate>                                                                <DataTemplate>                                                                    <table>                                                                        <tr>                                                                            <td>                                                                                <div class="nearbyLineHeadSign" data-tag="nearbyLineHeadSign">                                                                                    <TextBlock Text="{Binding name}" />                                                                                <\/div>                                                                            <\/td>                                                                            <td>                                                                                <div class="nearbyLineNextTime" data-tag="nearbyLineNextTime" style:display="none">                                                                                    <TextBlock Text="{Binding departureTime}" />                                                                                <\/div>                                                                            <\/td>                                                                        <\/tr>                                                                    <\/table>                                                                <\/DataTemplate>                                                            <\/ItemsControl.ItemTemplate>                                                        <\/ItemsControl>                                                    <\/div>                                                <\/DataTemplate>                                            <\/ItemsControl.ItemTemplate>                                        <\/ItemsControl>                                    <\/td>                                <\/a>                            <\/tr>                        <\/table>                    <\/div>                <\/DataTemplate>            <\/ItemsControl.ItemTemplate>        <\/ItemsControl>    <\/div><\/div>',vi='<div class="bm_transitPanel oneMap" data-tag="transitLinePanel">    <div class="backButtonContainer" style:display="{Binding entryPoint Converter=showBackButton}">        <a class="transitBack commonButton backArrowButton" data-tag="transitLineBack" data-task="{Binding id Converter=getRemoveAction}" href="#">            <TextBlock Text="{Binding resources.L_LineBackButton}" />        <\/a>    <\/div>    <div class="transitLineHeader" data-tag="transitLineHeader">        <div class="transitLineName" data-tag="transitLineName">            <TextBlock Text="{Binding lineName}" />        <\/div>    <\/div>    <div class="transitLineInfoBlock" data-tag="transitLineInfoBlock">        <div class="agencyName" data-tag="agencyName">            <a class="{Binding agencyUri Converter=agencyUriToClassName}" href="{Binding agencyUri}" event:click="onAgencyNameClick" target="_blank">                <TextBlock Text="{Binding agencyName}" />            <\/a>        <\/div>        <div class="agencyNumber" data-tag="agencyNumber">            <TextBlock Text="{Binding phoneNumber}" />        <\/div>    <\/div>    <div class="transitLineSectionSeparator" data-tag="transitLineSectionSeparator"><\/div>    <div class="stopsSection" data-tag="stopsSection" style:display="{Binding CurrentLine Converter=nullToDisplayNone}">        <div class="{Binding IsCollapsed Converter=getCollapseClass}" style:display="{Binding BaseStopIsSet Converter=displayCollapser}" event:click="onCollapseButtonClicked"><\/div>        <ItemsControl ItemsSource="{Binding StopList}">            <ItemsControl.ItemTemplate>                <DataTemplate>                    <div class="{Binding $self$ Converter=getStopClassName}" style:display="{Binding isCollapsed Converter=boolToNotDisplay}" data-index="{Binding stopIndex}" data-task="{Binding $self$ Converter=buildStopTaskOptionsString}" event:click="onStopEntryClicked" event:mouseenter="onStopListHover" event:mouseleave="onStopListHover">                        <div class="stopIcon" data-tag="stopIcon" />                        <div class="{Binding isLastStop Converter=getLineClassName}" style:background-color="{Binding $self$ Converter=getLineColor}"><\/div>                        <div class="stopName" data-tag="stopName">                            <TextBlock Text="{Binding stopName}" />                        <\/div>                        <div class="baseStopTrips" data-tag="baseStopTrips" style:display="{Binding isBaseStop Converter=boolToDisplay}">                            <ItemsControl ItemsSource="{Binding currentTrips}">                                <ItemsControl.ItemTemplate>                                    <DataTemplate>                                        <div class="{Binding deltaBetweenScheduledAndPredicted Converter=timeDifferenceToTripBlockClass}" data-tag="tripBlock">                                            <div data-tag="delayText">                                                <TextBlock Text="{Binding deltaBetweenScheduledAndPredicted Converter=secondsToMinutesLateString}" />                                            <\/div>                                            <div data-tag="scheduleTime">                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDisplayString}" />                                            <\/div>                                        <\/div>                                    <\/DataTemplate>                                <\/ItemsControl.ItemTemplate>                            <\/ItemsControl>                        <\/div>                    <\/div>                <\/DataTemplate>            <\/ItemsControl.ItemTemplate>        <\/ItemsControl>    <\/div>    <div class="errorMessageContainer" data-tag="errorMessage" style:display="{Binding ErrorMessage Converter=showErrorMessage}">        <TextBlock Text="{Binding ErrorMessage}" />    <\/div><\/div>',yi='<div class="bm_transitPanel oneMap" data-tag="transitPanel">    <div class="addressContainer" data-tag="addressContainer">        <div class="stopAddressHeader" data-tag="stopAddressHeader">            <TextBlock Text="{Binding resources.L_StopAddress}" />        <\/div>        <div class="stopAddressField" data-tag="stopAddressField">            <TextBlock Text="{Binding transitStop.stopName}" />        <\/div>    <\/div>    <div class="actionButtons" data-tag="actionButtons">        <a href="#" class="directionsAction">            <TextBlock Text="{Binding resources.L_DirectionsActionText}" />        <\/a>        <div class="directionsPopOut" data-tag="directionsPopOut">        <\/div>    <\/div>    <div class="timePicker" data-tag="timePicker">        <TimeControl Time="{Binding time Mode=TwoWay}" />        <a href="#" class="dateButton" style:display="{Binding showCalendar Converter=boolToNotDisplay}" event:click="onDateButtonClick" data-tag="date">            <TextBlock Text="{Binding date Converter=dateToText}" />        <\/a>        <div style:display="{Binding showCalendar Converter=boolToDisplay}" class="calContainer" data-tag="datePicker" event:click="onCalContainerClick"><\/div>    <\/div>    <div class="realtimeLegend" style:display="{Binding showRealtimeLegend Converter=boolToDisplay}">        <div class="realtimeIcon" data-tag="realtimeIcon"><\/div>        <div class="realtimeKey" data-tag="realtimeKey">            <TextBlock Text="{StaticBinding resources.L_RealTime}" />        <\/div>    <\/div>    <div class="sectionSeparator" data-tag="sectionSeparator"><\/div>    <div class="scheduleInfo" data-tag="scheduleInfo">        <DictionaryItemsControl KeyList="{Binding AgenciesList}" Dictionary="{Binding AgencyContainers}">            <DictionaryItemsControl.ValueTemplate>                <DataTemplate>                    <div>                        <div class="lineInfoBlock" data-tag="lineInfoBlock">                            <div class="agencyName" data-tag="agencyName">                                <a class="{Binding uri Converter=agencyUriToClassName}" href="{Binding uri}" event:click="onAgencyNameClick" target="_blank">                                    <TextBlock Text="{Binding agencyName}" />                                <\/a>                            <\/div>                            <div class="agencyNumber" data-tag="agencyNumber">                                <TextBlock Text="{Binding phoneNumber}" />                            <\/div>                        <\/div>                        <DictionaryItemsControl KeyList="{Binding lineList}" Dictionary="{Binding allLineInfo}">                            <DictionaryItemsControl.ValueTemplate>                                <DataTemplate>                                    <div class="lineRow" data-tag="lineRow">                                        <div class="lineHeader" data-tag="lineHeader" data-agencyname="{Binding line.agencyName}" data-linename="{Binding line.abbreviatedName}" event:click="onTransitLineClick" event:mouseenter="onLineHeaderHover" event:mouseleave="onLineHeaderHover">                                            <div class="headerContainer">                                                <div class="lineName" data-tag="lineName">                                                    <div class="lineColor" data-tag="lineColor" style:background-color="{Binding line Converter=lineToColorHexString}"><\/div>                                                    <TextBlock Text="{Binding line.abbreviatedName}" />                                                <\/div>                                                <div class="realtimeIcon" data-tag="realtimeIcon" style:display="{Binding isRealtime Converter=boolToDisplay}"><\/div>                                            <\/div>                                        <\/div>                                        <div class="{Binding isRealtime Converter=getLineContainerClass}" data-tag="lineContainer" data-agencyname="{Binding line.agencyName}" data-linename="{Binding line.abbreviatedName}" event:click="onTransitLineClick">                                            <div class="lineErrorMessageContainer" data-tag="lineErrorMessage" style:display="{Binding headSignList Converter=showLineErrorMessage}">                                                <TextBlock Text="{StaticBinding resources.L_NoDeparturesError}" />                                            <\/div>                                            <DictionaryItemsControl KeyList="{Binding headSignList}" Dictionary="{Binding tripContainers}" NameClass="{Binding headSignList Converter=useValidHeadSignClass}" ContainerClass="tripContainer" BlockClass="headSignBlock" event:onBlockClicked="onHeadSignClick">                                                <DictionaryItemsControl.ValueTemplate>                                                    <DataTemplate>                                                        <div class="{Binding deltaBetweenScheduledAndPredicted Converter=timeDifferenceToTripBlockClass}" data-tag="tripBlock">                                                            <div data-tag="delayText">                                                                <TextBlock Text="{Binding deltaBetweenScheduledAndPredicted Converter=secondsToMinutesLateString}" />                                                            <\/div>                                                            <div data-tag="scheduleTime">                                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDisplayString}" />                                                            <\/div>                                                            <div data-tag="scheduleDate" style:display="{Binding $self$ Converter=showScheduleDate}">                                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDateString}" />                                                            <\/div>                                                        <\/div>                                                    <\/DataTemplate>                                                <\/DictionaryItemsControl.ValueTemplate>                                            <\/DictionaryItemsControl>                                        <\/div>                                        <div class="sectionSeparator"><\/div>                                    <\/div>                                <\/DataTemplate>                            <\/DictionaryItemsControl.ValueTemplate>                        <\/DictionaryItemsControl>                    <\/div>                <\/DataTemplate>            <\/DictionaryItemsControl.ValueTemplate>        <\/DictionaryItemsControl>    <\/div>    <div class="errorMessageContainer" data-tag="errorMessage" style:display="{Binding ErrorMessage Converter=showErrorMessage}">        <TextBlock Text="{Binding ErrorMessage}" />    <\/div>    <div class="streetsideControl" data-tag="streetsideControl">        <a data-streetside="" href="#" id="ssImg" class="streetsideLink">            <p class="streetsideText" data-tag="streetsideText">                <TextBlock Text="{Binding resources.L_StreetsideText}" />            <\/p>        <\/a>    <\/div><\/div>',pi='<div class="bm_transitPanel" data-tag="transitLinePanel">    <div class="backButtonContainer" style:display="{Binding entryPoint Converter=showBackButton}">        <a class="transitBack commonButton backArrowButton" data-tag="transitLineBack" data-task="{Binding id Converter=getRemoveAction}" href="#">            <TextBlock Text="{Binding resources.L_LineBackButton}"/>        <\/a>    <\/div>    <div class="lineHeader transitLine" data-tag="lineHeader">        <div class="lineName" data-tag="lineName">            <div class="lineColor" data-tag="lineColor" style:background-color="{Binding topLineColor}"><\/div>            <TextBlock Text="{Binding lineName}" />        <\/div>    <\/div>    <div class="noSelectorPadding"><\/div>    <div class="sectionSeparator" data-tag="sectionSeparator"><\/div>    <div class="stopsSection" data-tag="stopsSection" style:display="{Binding CurrentLine Converter=nullToDisplayNone}">        <div class="stopsTitle" data-tag="stopsTitle">            <TextBlock Text="{Binding resources.L_StopListTitle}" />        <\/div>        <div class="{Binding IsCollapsed Converter=getCollapseClass}" style:display="{Binding BaseStopIsSet Converter=displayCollapser}" event:click="onCollapseButtonClicked"><\/div>        <ItemsControl ItemsSource="{Binding StopList}">            <ItemsControl.ItemTemplate>                <DataTemplate>                    <div class="{Binding $self$ Converter=getStopClassName}" style:display="{Binding isCollapsed Converter=boolToNotDisplay}" data-index="{Binding stopIndex}" data-task="{Binding $self$ Converter=buildStopTaskOptionsString}" event:click="onStopEntryClicked" event:mouseenter="onStopListHover" event:mouseleave="onStopListHover">                        <CanvasControl class="stopIcon" VectorTemplate="{Binding $self$ Converter=getVectorTemplate}" />                        <div class="{Binding isLastStop Converter=getLineClassName}" style:background-color="{Binding $self$ Converter=getLineColor}"><\/div>                        <div class="stopName" data-tag="stopName">                            <TextBlock Text="{Binding stopName}" />                        <\/div>                        <div class="baseStopTrips" data-tag="baseStopTrips" style:display="{Binding isBaseStop Converter=boolToDisplay}">                            <ItemsControl ItemsSource="{Binding currentTrips}">                                <ItemsControl.ItemTemplate>                                    <DataTemplate>                                        <div class="{Binding deltaBetweenScheduledAndPredicted Converter=timeDifferenceToTripBlockClass}" data-tag="tripBlock">                                            <div data-tag="delayText">                                                <TextBlock Text="{Binding deltaBetweenScheduledAndPredicted Converter=secondsToMinutesLateString}" />                                            <\/div>                                            <div data-tag="scheduleTime">                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDisplayString}" />                                            <\/div>                                        <\/div>                                    <\/DataTemplate>                                <\/ItemsControl.ItemTemplate>                            <\/ItemsControl>                        <\/div>                    <\/div>                <\/DataTemplate>            <\/ItemsControl.ItemTemplate>        <\/ItemsControl>    <\/div>    <div class="errorMessageContainer" data-tag="errorMessage" style:display="{Binding ErrorMessage Converter=showErrorMessage}">        <TextBlock Text="{Binding ErrorMessage}" />    <\/div><\/div>',wi='<div class="bm_transitPanel" data-tag="transitPanel">    <div class="addressContainer" data-tag="addressContainer">        <div class="stopAddressHeader" data-tag="stopAddressHeader">            <TextBlock Text="{Binding resources.L_StopAddress}" />        <\/div>        <div class="stopAddressField" data-tag="stopAddressField">            <TextBlock Text="{Binding transitStop.stopName}" />        <\/div>    <\/div>    <div class="actionButtons" data-tag="actionButtons">        <a href="#" class="directionsAction">            <TextBlock Text="{Binding resources.L_DirectionsActionText}" />        <\/a>        <div class="directionsPopOut" data-tag="directionsPopOut">        <\/div>    <\/div>    <div class="timePicker" data-tag="timePicker">        <TimeControl Time="{Binding time Mode=TwoWay}" />        <a href="#" class="dateButton" style:display="{Binding showCalendar Converter=boolToNotDisplay}" event:click="onDateButtonClick" data-tag="date">            <TextBlock Text="{Binding date Converter=dateToText}" />        <\/a>        <div style:display="{Binding showCalendar Converter=boolToDisplay}" class="calContainer" data-tag="datePicker" event:click="onCalContainerClick"><\/div>    <\/div>    <div class="realtimeLegend" style:display="{Binding showRealtimeLegend Converter=boolToDisplay}">        <div class="realtimeIcon" data-tag="realtimeIcon"><\/div>        <div class="realtimeKey" data-tag="realtimeKey">            <TextBlock Text="{StaticBinding resources.L_RealTime}" />        <\/div>    <\/div>    <div class="sectionSeparator" data-tag="sectionSeparator"><\/div>    <div class="scheduleInfo" data-tag="scheduleInfo">        <DictionaryItemsControl KeyList="{Binding AgenciesList}" Dictionary="{Binding AgencyContainers}">            <DictionaryItemsControl.ValueTemplate>                <DataTemplate>                    <div>                        <div class="lineInfoBlock" data-tag="lineInfoBlock">                            <div class="agencyName" data-tag="agencyName">                                <a class="{Binding uri Converter=agencyUriToClassName}" href="{Binding uri}" event:click="onAgencyNameClick" target="_blank">                                    <TextBlock Text="{Binding agencyName}" />                                <\/a>                            <\/div>                            <div class="agencyNumber" data-tag="agencyNumber">                                <TextBlock Text="{Binding phoneNumber}" />                            <\/div>                        <\/div>                        <DictionaryItemsControl KeyList="{Binding lineList}" Dictionary="{Binding allLineInfo}">                            <DictionaryItemsControl.ValueTemplate>                                <DataTemplate>                                    <div class="lineRow" data-tag="lineRow">                                        <div class="lineHeader" data-tag="lineHeader" data-agencyname="{Binding line.agencyName}" data-linename="{Binding line.abbreviatedName}" event:click="onTransitLineClick" event:mouseenter="onLineHeaderHover" event:mouseleave="onLineHeaderHover">                                            <div class="headerContainer">                                                <div class="lineName" data-tag="lineName">                                                    <div class="lineColor" data-tag="lineColor" style:background-color="{Binding line Converter=lineToColorHexString}"><\/div>                                                    <TextBlock Text="{Binding line.abbreviatedName}" />                                                <\/div>                                                <div class="realtimeIcon" data-tag="realtimeIcon" style:display="{Binding isRealtime Converter=boolToDisplay}"><\/div>                                            <\/div>                                        <\/div>                                        <div class="{Binding isRealtime Converter=getLineContainerClass}" data-tag="lineContainer" data-agencyname="{Binding line.agencyName}" data-linename="{Binding line.abbreviatedName}" event:click="onTransitLineClick">                                            <div class="lineErrorMessageContainer" data-tag="lineErrorMessage" style:display="{Binding headSignList Converter=showLineErrorMessage}">                                                <TextBlock Text="{StaticBinding resources.L_NoDeparturesError}" />                                            <\/div>                                            <DictionaryItemsControl KeyList="{Binding headSignList}" Dictionary="{Binding tripContainers}" NameClass="{Binding headSignList Converter=useValidHeadSignClass}" ContainerClass="tripContainer" BlockClass="headSignBlock" event:onBlockClicked="onHeadSignClick">                                                <DictionaryItemsControl.ValueTemplate>                                                    <DataTemplate>                                                        <div class="{Binding deltaBetweenScheduledAndPredicted Converter=timeDifferenceToTripBlockClass}" data-tag="tripBlock">                                                            <div data-tag="delayText">                                                                <TextBlock Text="{Binding deltaBetweenScheduledAndPredicted Converter=secondsToMinutesLateString}" />                                                            <\/div>                                                            <div data-tag="scheduleTime">                                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDisplayString}" />                                                            <\/div>                                                            <div data-tag="scheduleDate" style:display="{Binding $self$ Converter=showScheduleDate}">                                                                <TextBlock Text="{Binding $self$ Converter=timeStringToDateString}" />                                                            <\/div>                                                        <\/div>                                                    <\/DataTemplate>                                                <\/DictionaryItemsControl.ValueTemplate>                                            <\/DictionaryItemsControl>                                        <\/div>                                        <div class="sectionSeparator"><\/div>                                    <\/div>                                <\/DataTemplate>                            <\/DictionaryItemsControl.ValueTemplate>                        <\/DictionaryItemsControl>                    <\/div>                <\/DataTemplate>            <\/DictionaryItemsControl.ValueTemplate>        <\/DictionaryItemsControl>    <\/div>    <div class="errorMessageContainer" data-tag="errorMessage" style:display="{Binding ErrorMessage Converter=showErrorMessage}">        <TextBlock Text="{Binding ErrorMessage}" />    <\/div>    <div class="streetsideControl" data-tag="streetsideControl">        <a data-streetside="" href="#" id="ssImg" class="streetsideLink">            <p class="streetsideText" data-tag="streetsideText">                <TextBlock Text="{Binding resources.L_StreetsideText}" />            <\/p>        <\/a>    <\/div><\/div>',v=this&&this.__extends||function(){var n=function(t,i){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i])},n(t,i)};return function(t,i){function r(){this.constructor=t}n(t,i);t.prototype=i===null?Object.create(i):(r.prototype=i.prototype,new r)}}(),ct=function(n){function t(t,i,r){var u=this;return u=n.call(this,t,i,r,0,0,ft.transit,0,{mode:"transit",isFerry:!1})||this,u.changeRouteSelectionState(!0),u}return v(t,n),t.prototype.createOptions=function(){return wt.createTransitPolylineOptions(this.colorValue)},t}(fi),wt=function(){function n(){}return n.createTransitPolylineOptions=function(n){var t="#2B86EE",i=null;return t!=null&&(i={visible:!0,strokeStyle:n?n:t,lineWidth:2,secondaryStrokeStyle:"rgba({rgb}, {alpha})".replace("{rgb}","255, 255, 255").replace("{alpha}","0.7"),secondaryLineWidth:6,strokeDashArray:[]}),i},n.createTransitPinOptions=function(n,t,i){var f=[],r,e="#333333",u=2.5,o=!1;switch(n){case g.end:r=4.5;break;case g.middle:r=t<=14?3:t<=15?3.5:t<=17?4:t<=18?4.5:5;u=1}return r&&i&&(e="#000",u=3,o||r++),r&&f.push({isVectorImage:!0,radius:r,fillColor:"#FFF",borderColor:e,borderWidth:u,isSquare:o}),f},n}(),tt=function(n){function t(t,i,r,u){var f=n.call(this,t,u||g.middle,ft.transit,!0,"transit",i,-1,r,null,!1)||this;return f.changeRouteSelectionState(!0),f.setLabel(r,null),f}return v(t,n),t.prototype.createOptions=function(n,t,i,r,u,f){return wt.createTransitPinOptions(n,t,f,this.colorValue)},t.prototype.isMoveEnabled=function(){return!1},t.prototype.update=function(){this._changeTemplate(this.isHidden?null:this.createOptions(this.pushpinIconType,this.currentZoomLevel,"",this.isRouteSelected,this.taskState,this.isPinHighlighted,this.routeMode));this.revision++},t.prototype.highlightPin=function(n){this.isPinHighlighted=n;this.update();this.entity.changed.invoke()},t.prototype.setLabel=function(n,t){var i=this;n&&this.isRouteSelected?(i.bucket=ii.bucketIdForDirectionsPins,this.entity.name=n,this.entity.iconText=t):i.bucket=null},t}(ei),bi=function(){function n(){}return n.downloadNearbyTransitStop=function(n,t){n&&n.dateTime&&n.location&&n.span?ht.instance.authenticateClientAndRetrieveSessionId(function(){var i=h.nearbyTransitStopRequestFormat,r=n.dateTime,u=n.location.latitude,f=n.location.longitude,e=u+","+f,o=n.span,s=r.getMinutes(),c=r.getSeconds();i=i.replace("{credentials}",k.credentials);i=i.replace("{culture}",et.dynamicProperties.uiLanguage);i=i.replace("{location}",e);i=i.replace("{span}",o.toString());i=i.replace("{month}",(r.getMonth()+1).toString());i=i.replace("{day}",r.getDate().toString());i=i.replace("{year}",r.getFullYear().toString());i=i.replace("{hour}",r.getHours().toString());i=i.replace("{min}",s.toString());i=i.replace("{sec}",c.toString());k.downloadJsonp(i,"neartrans",function(i){t&&t(n,i)},function(){t&&t(n,null)},null,!1,n)}):t&&t(n,null)},n}(),ki=function(n){function t(t,i,r){var u=n.call(this)||this;return u._controlTemplateFactory=t,u.type=s.nearbyTransitTask,u.poiManager=r,u._setTaskCompleted=!1,u.scrollLane=new a,u.displayState={colorIndex:7,groupName:"Transit"},u}return v(t,n),t.prototype.activate=function(t,i){var u=this,e;n.prototype.activate.call(this,t,i);this._taskState=i||{};e=r.L_NearbyTransitTitle.replace("{0}",this._taskState.title);this.setTitle(e);var o=this._taskState.location,s=this.milesToMeters(h.nearbyStopSpan),l=new Date;bi.downloadNearbyTransitStop({location:o,span:s,dateTime:l},function(n,t){var i=[],s=!1,e,h;t&&t.resourceSets&&t.resourceSets.length&&t.resourceSets[0].resources&&t.resourceSets[0].resources.length&&(i=t.resourceSets[0].resources[0],u._sortStops(i),s=!0);u._nearbyTransitViewModel=new gi(u._controlTemplateFactory,i,u.poiManager,u.scrollLane,o,u._taskState.title);u.addControl(u._nearbyTransitViewModel.getControl());s||u._nearbyTransitViewModel.setErrorMessage(r.L_NearbyTransitResponseError);u._nearbyTransitViewModel.nearbyStops&&(e=u._nearbyTransitViewModel.getControl(),u.addControl(e),u._currentPrimitive=[],h=e.select("div[data-index]"),u._nearbyTransitViewModel.nearbyStops.forEach(function(n){var t=new ot(n.stopName,n.stopName,n.stopId,n.location,n.location),i;t.setPrimaryCategoryPath(u._getCatId(n.departingLines));t.htmlElement=f(h[n.index]);t.representsTransitStop=!0;i=new st(n.location,t);u._currentPrimitive.push(i)}),u.setMapPrimitives(u._currentPrimitive));u._setTaskCompleted=!0});d.logInstrumentationEvent(b.A,{EP:this._taskState.entryPoint});c.callMapSnRInstrumentation(d.featureName,d.queryData+this._taskState.title)},t.prototype.process=function(t,i){var u=this,r=t&&t.requestState,f;r.hideEntity&&(this._setTaskCompleted?this._hideSelectedPrimitive(r.selectedEntityId):(this._taskInitialized=new a,this.disposables.push(this._taskInitialized.addOne(function(){u._hideSelectedPrimitive(r.selectedEntityId)}))),i&&i({processorId:this.id,data:{}}));r.showEntity&&r.selectedEntityId?(f=function(){var n=u._updatePrimitiveState(r.selectedEntityId,0);n&&u.poiManager.invalidated.invoke()},this._setTaskCompleted?f():(this._taskInitialized=new a,this.disposables.push(this._taskInitialized.addOne(function(){f()}))),i&&i({processorId:this.id,data:{}})):n.prototype.process.call(this,t,i)},t.prototype.deactivate=function(){n.prototype.deactivate.call(this);d.logInstrumentationEvent(b.D,{})},t.prototype.setDisplayState=function(t){n.prototype.setDisplayState.call(this,t);this.poiManager&&this.poiManager.setTaskDisplayState(this.displayState)},t.prototype.serialize=function(){return this._taskState&&(this._taskState.taskTitle=this.getTitle()),this._taskState},t.prototype.getCardIconInfo=function(){return{iconClass:"trnsTsk"}},t.prototype.getIconClass=function(){return"trnsTsk"},t.prototype.isSharable=function(){return!0},t.prototype.milesToMeters=function(n){return Math.floor(n*1609.34)},t.prototype._getCatId=function(n){for(var r,t=-1,i=0;i<n.length;i++){if(r=n[i].transitType,t>=0&&t!==r){t=-1;break}t=r}switch(t){case 1:return"203";case 2:return"200";case 3:return"207";case 4:return"202";case 5:return"204";case 7:return"201";case 6:case 8:return"205";default:return"250"}},t.prototype._hideSelectedPrimitive=function(n){var t=this._updatePrimitiveState(n,3);t&&(this.serializableObjectChanged.invoke({magnitude:0}),this.poiManager.invalidated.invoke())},t.prototype._updatePrimitiveState=function(n,t){for(var r=!1,i=0;this._currentPrimitive&&i<this._currentPrimitive.length;i++)if(this._currentPrimitive[i].entity.id===n){this._currentPrimitive[i].viewState=t;this._currentPrimitive[i].revision=(this._currentPrimitive[i].revision||0)+1;r=!0;break}return r},t.prototype._sortStops=function(n){var t,i;if(n&&n.stops)for(t=0;t<n.stops.length;t++)i=n.stops[t],i.departingLines.sort(function(n,t){return rt.compareLineNames(n.name,t.name)})},t}(ut),lt=function(){function n(){}return n.CreateStopIcon=function(){return this._createIcon(4,"#FFFFFF",1,"#333333")},n.CreateEndStopIcon=function(){return this._createIcon(6,"#FFFFFF",2,"#333333")},n.CreateBaseStopIcon=function(){var n="#333333",t=n;return this._createIcon(6,"#FFFFFF",2,n,4,t)},n._createIcon=function(n,t,i,r,u,f){var s=[],e=n+i,h={centerX:e,centerY:e,radiusX:n,radiusY:n,vectorType:2,style:{fillStyle:t}},c={centerX:e,centerY:e,radiusX:n+i,radiusY:n+i,vectorType:2,style:{fillStyle:r}},o;return u&&f&&(o={centerX:e,centerY:e,radiusX:u,radiusY:u,vectorType:2,style:{fillStyle:f}}),s=o?[c,h,o]:[c,h],new hi({records:s,hotspotX:0,hotspotY:0,hitTest:1})},n}(),p;(function(n){n[n.A=1]="A";n[n.D=2]="D";n[n.MPH=3]="MPH";n[n.MPC=4]="MPC";n[n.ALC=5]="ALC";n[n.DTC=6]="DTC"})(p||(p={})),function(n){n[n.A=1]="A";n[n.D=2]="D";n[n.NPH=3]="NPH";n[n.ITH=4]="ITH"}(b||(b={})),function(n){n[n.A=1]="A";n[n.D=2]="D";n[n.SPH=3]="SPH";n[n.SPC=4]="SPC";n[n.SEH=5]="SEH";n[n.SEC=6]="SEC";n[n.RDO=7]="RDO";n[n.RDS=8]="RDS";n[n.EC=9]="EC"}(o||(o={}));var c=function(){function n(){}return n.logInstrumentationEvent=function(t,i){var r={logData:{feature:n.featureName,action:p[t],data:i}};e.invokeHandler(u.instrumentationDataHandlerKey,r)},n.callMapSnRInstrumentation=function(n,t){var i={logData:{feature:n,data:t}};e.invokeHandler(u.callServerInstrumentationDataHandlerKey,i)},n.featureName="TS",n.queryData="transit stop - ",n}(),d=function(){function n(){}return n.logInstrumentationEvent=function(t,i){var r={logData:{feature:n.featureName,action:b[t],data:i}};e.invokeHandler(u.instrumentationDataHandlerKey,r)},n.featureName="NT",n.queryData="transit stops nearby ",n}(),l=function(){function n(){}return n.logInstrumentationEvent=function(t,i){var r={logData:{feature:n.featureName,action:o[t],data:i}};e.invokeHandler(u.instrumentationDataHandlerKey,r)},n.featureName="TL",n.queryData="transit line - ",n}(),di=function(n){function t(i,r,u){var f=n.call(this)||this;return f._map=r,t.currentZoomLevel=yt.getMercatorZoomLevel(f._map),f._controlTemplateFactory=i,f.type=s.transitLineTask,f.invalidated=new a,f._dragonflyContainer=u,f.displayState={colorIndex:7,groupName:"TransitLine"},f._primitives=[],f}return v(t,n),t.prototype.activate=function(t,i){var u=this;n.prototype.activate.call(this,t,i);this._map=t;this._taskState=i||{};var f=this._taskState.lineName,e=this._taskState.location,y=this._taskState.headSign,s=this._getTransitLineName(f,y),p=this._taskState.dateTime,a=p,v=this._taskState.dateTime?a?new Date(Date.parse(a)):this._taskState.dateTime:new Date;h.oneMapStyleChanges?this.setTitle(s):this.setTitle(f);it.downloadTransitLine({lineName:f,dateTime:v,stopLat:e.latitude,stopLong:e.longitude},function(n,t){var i=[],e=!1;t&&t.resourceSets&&t.resourceSets.length&&t.resourceSets[0].resources&&t.resourceSets[0].resources.length&&(i=t.resourceSets[0].resources[0].lines,e=!0);u._lineViewModel=new dt(u._controlTemplateFactory,i,v,u.id,u._taskState.entryPoint,h.oneMapStyleChanges?s:f,u._taskState.lineColor,u._taskState.lineTextColor,u._taskState.stopId,u._taskState.headSign,u._taskState.tripContainers,u._taskState.agencyContainer.agencyName,u._taskState.agencyContainer.phoneNumber,u._taskState.agencyContainer.uri);e?(u._lineViewModel.disposables.push(u._lineViewModel.onCurrentLineChanged.add(function(){u.onCurrentLineChange()})),u._lineViewModel.disposables.push(u._lineViewModel.onStopHovered.add(function(n){u._stopHovered(n)})),u.onCurrentLineChange(),u.disposables.push(u._map.viewChanged.add(function(n){return u._onViewChanged(n)})),u.disposables.push(u._map.mapTypeChanged.add(function(n){return u._onMapTypeChanged(n)}))):(u._lineViewModel.setErrorMessage(r.L_Transit_Error_Request_Failed),l.logInstrumentationEvent(o.EC,{E:1}));u.addControl(u._viewModelControl=u._lineViewModel.getControl())});l.logInstrumentationEvent(o.A,{EP:this._taskState.activationEntryPoint});c.callMapSnRInstrumentation(l.featureName,l.queryData+f)},t.prototype.deactivate=function(){n.prototype.deactivate.call(this);this._lineViewModel&&this._lineViewModel.dispose();this._layer&&this._map.getLayers().remove(this._layer);this._layer=null;this._transitPolyline=null;this._transitPushpins=null;this._primitives=null;l.logInstrumentationEvent(o.D,{})},t.prototype.process=function(){},t.prototype.processCallback=function(n){!n||!n.inData||!n.processorType||!n.outData},t.prototype.setDisplayState=function(i){n.prototype.setDisplayState.call(this,i);this._primitives&&this._primitives.length>0&&(i.prominence===1?(this._updatePrimitiveActivationStates(!0),this._updatePrimitivesToDraw(t.currentZoomLevel),this.invalidated.invoke()):i.prominence&&(this._updatePrimitiveActivationStates(!1),this.invalidated.invoke()))},t.prototype.getPrimitives=function(n,t){var i=this._primitives;t&&t({primitives:i})},t.prototype.getMapLayer=function(){return this._layer},t.prototype.getCardIconInfo=function(){return{iconClass:"trnsStpTsk"}},t.prototype.serialize=function(n,t){return this._taskState&&(this._taskState.taskTitle=this.getTitle()),t&&t===2&&(this._taskState.entryPoint=y.Permalink),this._taskState},t.prototype.isSharable=function(){return!0},t.prototype.onCurrentLineChange=function(){var n=this,i;this._resetPrimitives();this._resetMapLayer();i=this._lineViewModel.getCurrentLine();this._transitPolyline=this._createPolyLine(i);this._transitPushpins=this._createStopPins(i);this._updatePrimitivesToDraw(t.currentZoomLevel);this.disposables.push(this._layer.primitiveTapped.add(function(t){n._onPrimitiveTapped(t)}));this.disposables.push(this._layer.primitiveHoverStarted.add(function(t){n._onPrimitiveHover(t,!0)}));this.disposables.push(this._layer.primitiveHoverStopped.add(function(t){n._onPrimitiveHover(t,!1)}));this._transitPolyline&&this._addPrimitivesToLayer(this._transitPolyline.GetPrimitives());this._transitPushpins&&this._addPrimitivesToLayer(this._transitPushpins);this.invalidated.invoke();l.logInstrumentationEvent(o.RDS,{})},t.prototype._onPoiViewStateChanged=function(){},t.prototype._setMapLayerZIndex=function(n){this._layer&&this._layer.setZIndex(n)},t.prototype._createPolyLine=function(n){var r=[],i;if(n&&n.shape)r=n.shape.map(function(n){return new w(n.coordinates[0],n.coordinates[1])});else if(n&&n.stops)r=n.stops.map(function(n){return new w(n.position.coordinates[0],n.position.coordinates[1])});else return n&&l.logInstrumentationEvent(o.EC,{E:2}),null;return i=new ct(r,0,this._map.getMapType().id),i.colorValue=this._lineViewModel.lineColor,i.changeZoom(t.currentZoomLevel),i.update(),i},t.prototype._createStopPins=function(n){var e=[],r,o,i;if(n&&n.stops){for(r=n.stops,o=t.currentZoomLevel,i=0;i<r.length;i++){var f=r[i],s=new w(f.position.coordinates[0],f.position.coordinates[1]),u=new tt(s,i,f.stopName,i===0||i===r.length-1?g.end:g.middle);u.colorValue=this._lineViewModel.lineColor?dt.transitLineCenterColor:null;u.changeZoom(o);u.update();e.push(u)}return e}return null},t.prototype._addPrimitivesToLayer=function(n){if(this._layer)for(var t=0;t<n.length;t++)n[t].layer=this._layer},t.prototype._resetMapLayer=function(){this._layer||(this._layer=new ci("TransitLineTask_"+ui.getUniqueId(),this,new ti,si.foregroundZOrder),this._map.getLayers().insert(this._layer));this.invalidated.invoke()},t.prototype._resetPrimitives=function(){for(var n=0;n<this._primitives.length;n++)this._primitives[n].layer=null;this._transitPolyline=null;this._transitPushpins=null;this._primitives=[]},t.prototype._updatePrimitiveActivationStates=function(n){if(this._transitPolyline&&(this._transitPolyline.changeCardTaskState(n?1:3),this._transitPolyline.setVisibility(n),this._transitPolyline.update()),this._transitPushpins)for(var t=0;t<this._transitPushpins.length;t++)this._transitPushpins[t].changeCardTaskState(n?1:3),this._transitPushpins[t].setVisibility(n),this._transitPushpins[t].update()},t.prototype._onMapTypeChanged=function(n){var r,t,i;if(n.newMapTypeId!==n.oldMapTypeId)for(r=this._transitPolyline.GetPrimitives(),t=0;t<r.length;t++)i=r[t],i instanceof ct&&(i.changeMapType(n.newMapTypeId),i.update())},t.prototype._updatePrimitivesZoom=function(n){for(var t,r=this._primitives,i=0;i<r.length;i++)t=r[i],t instanceof ct?(t.changeZoom(n),t.update()):t instanceof tt&&(t.changeZoom(n),t.update());this._updatePrimitivesToDraw(n)},t.prototype._updatePrimitivesToDraw=function(n){var i,t;if(n<=10)this._primitives=[];else if(n<=12)this._transitPolyline&&(this._primitives=this._transitPolyline.GetPrimitives()),this._transitPushpins&&(i=this._transitPushpins.length-1,this._transitPushpins[0]&&(this._primitives=this._primitives.concat(this._transitPushpins[0])),this._transitPushpins[i]&&(this._primitives=this._primitives.concat(this._transitPushpins[i])));else if(n<=14){if(this._transitPolyline&&(this._primitives=this._transitPolyline.GetPrimitives()),this._transitPushpins){for(t=1;t<this._transitPushpins.length-1;t++)this._transitPushpins[t].changeCardTaskState(3);this._primitives=this._primitives.concat(this._transitPushpins)}}else if(this._transitPolyline&&(this._primitives=this._transitPolyline.GetPrimitives()),this._transitPushpins){for(t=1;t<this._transitPushpins.length-1;t++)this._transitPushpins[t].changeCardTaskState(1);this._primitives=this._primitives.concat(this._transitPushpins)}},t.prototype._onViewChanged=function(){var i=this._map.getMode(),n;i&&i.mapModeType!==2&&(n=yt.getMercatorZoomLevel(this._map),t.currentZoomLevel!==n&&(t.currentZoomLevel=n,this._updatePrimitivesZoom(n),this.invalidated.invoke()))},t.prototype._onPrimitiveHover=function(n,i){var r,u;n.primitive instanceof tt&&(r=n.primitive,r.highlightPin(i),u=f("[data-index="+r.stopPointIndex+"]",this._viewModelControl[0]),i?(this._currentHighlightedPin=r,u.add_class("highlighted"),this._startHoverDelay(o.SPH,{L:r.getLocation()})):(this._currentHighlightedPin=null,u.remove_class("highlighted"),window.clearTimeout(t._mouseoverDelayHandle)))},t.prototype._onPrimitiveTapped=function(n){var r;if(this.primitiveInteracted.invoke(),n.primitive instanceof tt){var i=n.primitive,t=this._lineViewModel.getCurrentLine(),f=t&&t.stops&&t.stops[i.stopPointIndex],s=this._lineViewModel.buildStopTaskOptions(f);e.invokeHandler(u.taskDataHandlerKey,s);l.logInstrumentationEvent(o.SPC,{L:i.getLocation()})}else this.displayState.activationState!==1&&(r={action:"focus",id:this.id},e.invokeHandler(u.taskDataHandlerKey,r))},t.prototype._stopHovered=function(n){var u=-1,i=null,r;n.currentTarget&&(r=n.currentTarget.attributes["data-index"],r&&(u=parseInt(r.value)),i=this._transitPushpins[u]);i&&(n.type==="mouseover"?(this._currentHighlightedPin&&this._currentHighlightedPin.highlightPin(!1),i.highlightPin(!0),this._currentHighlightedPin=i,this._startHoverDelay(o.SEH,{L:i.getLocation()})):n.type==="mouseout"&&(this._currentHighlightedPin=null,i.highlightPin(!1),window.clearTimeout(t._mouseoverDelayHandle)))},t.prototype._startHoverDelay=function(n,i){i=i||{};window.clearTimeout(t._mouseoverDelayHandle);t._mouseoverDelayHandle=Microsoft.Maps.setTimeout(function(){l.logInstrumentationEvent(n,i)},t._hoverTimeout)},t.prototype._getTransitLineName=function(n,t){var i="";return n&&t&&(i=n+" — "+t),i},t._hoverTimeout=500,t}(ut),it=function(){function n(){}return n.downloadTransitStop=function(t,i){t&&t.stopId&&t.dateTime?ht.instance.authenticateClientAndRetrieveSessionId(function(){var r=h.transitStopRequestFormat;r=r.replace("{credentials}",k.credentials);r=n._formatDateTime(t.dateTime,r);r=n._formatCulture(r);r=r.replace("{stopId}",t.stopId);k.downloadJsonp(r,"transstop",function(n){i&&i(t,n)},function(){i&&i(t,null)},null,!1,t)}):i&&i(t,null)},n.downloadTransitLine=function(t,i){t&&t.dateTime&&t.lineName&&t.stopLat&&t.stopLong?ht.instance.authenticateClientAndRetrieveSessionId(function(){var r=h.transitLineRequestFormat;r=r.replace("{credentials}",k.credentials);r=n._formatDateTime(t.dateTime,r);r=n._formatCulture(r);r=r.replace("{stoplat}",t.stopLat.toString()).replace("{stoplong}",t.stopLong.toString()).replace("{dist}","10").replace("{linename}",t.lineName);k.downloadJsonp(r,"transline",function(n){i&&i(t,n)},function(){i&&i(t,null)},null,!1,t)}):i&&i(t,null)},n._formatDateTime=function(n,t){var i=n.getMinutes(),r=n.getSeconds();return t.replace("{month}",(n.getMonth()+1).toString()).replace("{day}",n.getDate().toString()).replace("{year}",n.getFullYear().toString()).replace("{hour}",n.getHours().toString()).replace("{min}",(i<10?"0":"")+i.toString()).replace("{sec}",(r<10?"0":"")+r.toString())},n._formatCulture=function(n){return n.replace("{culture}",et.dynamicProperties.uiLanguage)},n}(),bt=function(n){function t(t,i,u,f,e){var o=n.call(this,t,i,u)||this;return t.defineProperty("errorMessage"),o.entryPoint=e,o.id=f,o.resources=r,o}return v(t,n),t.prototype.showErrorMessage=function(n){return!n||n.length===0?"none":""},t.prototype.timeStringToDisplayString=function(n){if(n){var t,u;if(Math.floor(n.deltaBetweenScheduledAndPredicted/60)?(t=n.predictedDeparture,u=r.L_UpdatedTime):(t=n.departure?n.departure:n.predictedDeparture,u="{0}"),t)return u.replace("{0}",i._getTimeString(t))}return null},t.prototype.secondsToMinutesLateString=function(n){if(n){var t=Math.floor(n/60);return t?t>0?r.L_MinLate.replace("{0}",t):r.L_MinEarly.replace("{0}",-1*t):""}return""},t.prototype.timeDifferenceToTripBlockClass=function(n){var t="tripBlock",i=Math.floor(n/60);return i&&(t+=i>0?" delayText":" earlyText"),t},t}(vt),kt=function(n){function t(t,i,r,u,f,e){var o=this,s={};return o=n.call(this,s,t,h.oneMapStyleChanges?yi:wi)||this,s.defineProperty("time",o._onDateTimeChanged),s.defineProperty("date",o._onDateTimeChanged),s.defineProperty("showCalendar",o._onShowCalendar,null,{defaultValue:!1}),o._windowEventHandler=function(){o.setShowCalendar(!1)},o.transitStop=i||{},o.stopId=u,o.showRealtimeLegend=i&&i.realTimeDataAtStop&&i.realTimeDataAtStop.length>0,e&&(o.stopEntity=e,o.stopLocation=e.getLocation(),o.stopEntity.representsTransitStop=!0),s.defineProperty("agenciesList"),s.defineProperty("agencyContainers"),o.setErrorMessage(""),o.makeTransitRequest=new a,o.flipToTransitLine=new a,o._buttonGroupViewModel=f,r&&(o.setTime(r.getHours()*3600+r.getMinutes()*60),o.setDate(r.getTime())),o.processTransitStop(o.transitStop,r),o.transitStop.position&&o.transitStop.position.coordinates&&o.transitStop.position.coordinates.length===2&&(o.stopLocation=new w(o.transitStop.position.coordinates[0],o.transitStop.position.coordinates[1]),o.stopEntity=new ot(o.transitStop.stopName,o.transitStop.stopName,""+o.stopId,o.stopLocation,o.stopLocation),o.stopEntity.representsTransitStop=!0,o._getStreetsideImage()),o}return v(t,n),t.prototype.onDateButtonClick=function(n){n.preventDefault();this.calendar&&(this.calendar.SetDate(this.getDate()),this.setShowCalendar(!0))},t.prototype.onCalContainerClick=function(n){var t=n.target;t&&t.className==="calendarTitle"||n.stopPropagation()},t.prototype.onLineHeaderHover=function(n){var i=f("[data-key]",n.currentTarget.parentElement),t;i.length&&(t=f(i[0]),n.type==="mouseover"?t.add_class("hovered"):n.type==="mouseout"&&t.remove_class("hovered"))},t.prototype.onTransitLineClick=function(n){var r=this._selectedHeadSign;this._selectedHeadSign=null;var s=f(n.currentTarget),h=s.get_attr("data-agencyname"),e=s.get_attr("data-linename"),o,t;if(h&&e&&(o=this._agencyContainers[h],t=o.allLineInfo[e]),r=r||t&&t.headSignList&&t.headSignList[0].key,r){var u=t&&t.tripContainers,c=u&&u[r]&&u[r][0]&&u[r][0].departure,l={dateTime:new Date(c?i._getTime(c):this.getDate()),location:this.stopLocation,lineName:e,lineColor:t&&t.line&&t.line.lineColor,lineTextColor:t&&t.line&&t.line.lineTextColor,headSign:r,tripContainers:u,stopId:this.stopId,agencyContainer:o};this.flipToTransitLine.invoke(l)}},t.prototype.onHeadSignClick=function(n){this._selectedHeadSign=n},t.prototype.onAgencyNameClick=function(){c.logInstrumentationEvent(p.ALC,{})},t.prototype.showScheduleDate=function(n){if(n){var u=n.predictedDeparture||n.departure,t=new Date(i._getTime(u)),r=new Date(this.getDate());return this.boolToNotDisplay(t.getUTCFullYear()===r.getFullYear()&&t.getUTCMonth()===r.getMonth()&&t.getUTCDate()===r.getDate())}return"none"},t.prototype.timeStringToDateString=function(n){if(n){var t=n.predictedDeparture||n.departure;return i._formatShortDateString(new Date(i._getTime(t)),!0)}return null},t.prototype.dateToText=function(n){return i._formatLongDateString(new Date(n))},t.prototype.lineToColorHexString=function(n){return i._formatHexColorString(n&&n.lineColor,"")},t.prototype.getLineContainerClass=function(n){var t="lineContainer";return n&&(t+=" realTimeColor"),t},t.prototype.showLineErrorMessage=function(n){return!n||n.length>0?"none":""},t.prototype.agencyUriToClassName=function(n){return"agencyNameLink"+(n?"":" noLink")},t.prototype.useValidHeadSignClass=function(n){return n&&n.length===1&&n[0].key===t.blankHeadsignIndicator?"hideTripName":"tripName"},t.prototype.processDirectionsData=function(n){var t=this.stopEntity.getTitle(),i=oi.getDirectionTaskOptions(t,this.stopLocation,y.TransitStop,t,this.stopId.toString());n&&n.inData&&n.inData.requestorState&&n.inData.requestorState.entryPoint===y.TransitStop&&this._buttonGroupViewModel.processDirectionsData(n,i)},t.prototype.registerActionButtonEvents=function(n){var f=this,t=this.getControl().select("a.directionsAction"),e=this.stopEntity,i=this.stopLocation,r,u;t&&t.length===1&&(r={logData:{feature:c.featureName,action:ri.Clicked,data:{AN:"Directions",CP:i,EP:y.TransitStop}}},u=function(n){return f._buttonGroupViewModel.directionButtonClicked(n,i,r,y.TransitStop)},t.add_event("click",u));this._buttonGroupViewModel.setEntityData(e,{requestorType:"TransitStopTask",requestorId:n},this.getControl())},t.prototype.processTransitStop=function(n,t){var u,i;if(this.setErrorMessage(""),this._agenciesList=[],this._agencyContainers={},n.realTimeDataAtStop&&this._equalsCurrentTime(t))for(n.realTimeDataAtStop.sort(function(n,t){return rt.compareLineNames(n.line.abbreviatedName,t.line.abbreviatedName)}),u=0;u<n.realTimeDataAtStop.length;u++)i=n.realTimeDataAtStop[u],i&&i.line&&i.trips&&this._processAgency(i,!0);if(n.scheduleDataAtStop)for(n.scheduleDataAtStop.sort(function(n,t){return rt.compareLineNames(n.line.abbreviatedName,t.line.abbreviatedName)}),u=0;u<n.scheduleDataAtStop.length;u++)i=n.scheduleDataAtStop[u],i&&i.line&&i.trips&&this._processAgency(i,!1);this.setAgenciesList(this._agenciesList);this.setAgencyContainers(this._agencyContainers);this._agenciesList.length===0&&this.setErrorMessage(r.L_Transit_Error_No_Routes)},t.prototype._processAgency=function(n,t){var r=n.line.agencyName,i=this._agencyContainers[r];i||(this._agenciesList.push({key:r}),i={lineList:[],allLineInfo:{},agencyId:n.line.agencyId,agencyName:n.line.agencyName,phoneNumber:n.line.phoneNumber,uri:n.line.uri,providerInfo:n.line.providerInfo},this._agencyContainers[r]=i);this._processStopData(n,i,t)},t.prototype._processStopData=function(n,i,r){var h=n.line.abbreviatedName,u=i.allLineInfo[h],s,f,e,o;if(u)u.line.lineColor||(u.line.lineColor=n.line.lineColor),u.line.lineTextColor||(u.line.lineTextColor=n.line.lineTextColor);else{for(i.lineList.push({key:h}),u={line:n.line,isRealtime:r,headSignList:[],tripContainers:{}},s=0;s<n.trips.length;s++)f=n.trips[s],this._processTripTimes(f),e=f.headsign,e===""&&(e=t.blankHeadsignIndicator),o=u.tripContainers[e],(f.departure||f.predictedDeparture)&&(o?o.push(f):(u.headSignList.push({key:e}),o=[f],u.tripContainers[e]=o));i.allLineInfo[h]=u}},t.prototype._processTripTimes=function(n){if(n.predictedDeparture&&n.departure){var t=i._getTime(n.departure),r=i._getTime(n.predictedDeparture),u=Math.floor((r-t)/1e3);n.deltaBetweenScheduledAndPredicted=u}},t.prototype._getStreetsideImage=function(){var n=f("a[data-streetside]",this.getControl()[0]),t={action:"showBubbleImage",location:this.stopLocation,localDetailsStartupOptions:{bubbleId:"",fov:null,heading:null,pitch:null,canonicalImageUrlGroup:[],sivImageContainer:n}};e.invokeHandler(u.streetsideDataHandlerKey,t)},t.prototype._onDateTimeChanged=function(){var n=new Date(this.getDate()),t=Math.floor(this.getTime()/60);n.setHours(Math.floor(t/60),t%60,0,0);this.makeTransitRequest.invoke(n);c.logInstrumentationEvent(p.DTC,{})},t.prototype._equalsCurrentTime=function(n){if(n){var r=new Date,t=r.getTime(),i=n.getTime();return i<=t+3e5&&i>=t-3e5}return!1},t.prototype._onShowCalendar=function(n,t){var r=this,i="click,contextmenu";t?Microsoft.Maps.setTimeout(function(){f(window).add_event(i,r._windowEventHandler)},1):n&&f(window).remove_event(i,this._windowEventHandler)},t.blankHeadsignIndicator="_____",t}(bt),rt=function(n){function t(i,r,f,o,h){var c=n.call(this)||this;return c.invalidated=new a,c._controlTemplateFactory=i,c.type=s.transitStopTask,c.poiManager=f,c.disposables.push(c.poiManager.poiTapped.add(function(){e.invokeHandler(u.taskDataHandlerKey,{action:"focus",id:c.id})})),c._buttonGroupViewModel=o,c._dragonflyContainer=h,t._groupId=t._groupId||1,c.displayState={colorIndex:7,groupName:"Transit"+t._groupId},t._groupId++,c}return v(t,n),t.prototype.activate=function(t,i){var o=this,v,w,b;n.prototype.activate.call(this,t,i);this._taskState=i||{};this._cardCategoryId=this._taskState.catId;var h=this._taskState.title,l=this._taskState.id,a=this._taskState.location,y=new Date;this.setTitle(h);a&&l&&h&&(v=new ot(h,h,l.toString(),a,a),this._currentPrimitive=new st(a,v),this.setMapPrimitives([this._currentPrimitive]));it.downloadTransitStop({stopId:l.toString(),dateTime:y},function(n,t){var i={},h=!1,e,u,s;t&&t.resourceSets&&t.resourceSets.length&&t.resourceSets[0].resources&&t.resourceSets[0].resources.length&&(i=t.resourceSets[0].resources[0],h=!0);i.stopName&&o.setTitle(i.stopName);o._stopViewModel=new kt(o._controlTemplateFactory,i,y,l,o._buttonGroupViewModel,v);o._stopViewModel.registerActionButtonEvents(o.id);h||o._stopViewModel.setErrorMessage(r.L_Transit_Error_Request_Failed);o._stopViewModel.stopEntity&&o._stopViewModel.stopLocation&&(o._currentPrimitive=new st(o._stopViewModel.stopLocation,o._stopViewModel.stopEntity),o.setMapPrimitives([o._currentPrimitive]),o.invalidated.invoke());e=o._stopViewModel.getControl();o.addControl(e);u=n.dateTime;o._stopViewModel.setTime(u.getHours()*3600+u.getMinutes()*60);o._stopViewModel.setDate(u.getTime());o._registerEventHandlers(l.toString());s=f(".calContainer",e[0]);s&&o._dragonflyContainer&&o._dragonflyContainer.instanceAsync("SingleCalendar",function(n){n.init(s);o._stopViewModel.calendar=n;n.onDateChangeEvent.add(function(n){o._stopViewModel.setShowCalendar(!1);o._stopViewModel.setDate(n.getTime())})})});this._currentPrimitive&&this._currentPrimitive.entity&&(w={hideEntity:!0,selectedEntityId:this._currentPrimitive.entity.id},b={requestorType:s.transitStopTask,requestorId:this.id,type:s.nearbyTransitTask,requestState:w,useActiveTasks:!0},e.invokeHandler(u.taskProcessDataHandlerKey,b));c.logInstrumentationEvent(p.A,{EP:this._taskState.activationEntryPoint});c.callMapSnRInstrumentation(c.featureName,c.queryData+h)},t.prototype.deactivate=function(){if(this._currentPrimitive&&this._currentPrimitive.entity){var t={showEntity:!0,selectedEntityId:this._currentPrimitive.entity.id},i={requestorType:s.transitStopTask,requestorId:this.id,type:s.nearbyTransitTask,requestState:t,useActiveTasks:!0};e.invokeHandler(u.taskProcessDataHandlerKey,i)}n.prototype.deactivate.call(this);this._stopViewModel.dispose();this._buttonGroupViewModel.dispose();c.logInstrumentationEvent(p.D,{})},t.prototype.process=function(n,t){var i=n&&n.requestState;i&&i.searchEntitiesRequested&&this._stopViewModel&&t&&t({processorId:this.id,data:this._stopViewModel.stopEntity})},t.prototype.processCallback=function(n){n&&n.inData&&n.processorType&&n.outData&&n.processorType===s.directionsTask&&this._stopViewModel&&this._stopViewModel.processDirectionsData(n)},t.prototype.setDisplayState=function(t){n.prototype.setDisplayState.call(this,t);this.poiManager&&this.poiManager.setTaskDisplayState(this.displayState)},t.prototype.serialize=function(){return this._taskState&&(this._taskState.taskTitle=this.getTitle()),this._taskState},t.prototype.isSharable=function(){return!0},t.prototype.getCardIconInfo=function(){return{iconClass:"trnsStpTsk",iconElements:this.getCardIcons(this._cardCategoryId)}},t.prototype._onPoiViewStateChanged=function(){},t.compareLineNames=function(n,t){var i=parseInt(n),r=parseInt(t);if(isNaN(i)||isNaN(r))if(isNaN(i)){if(!isNaN(r))return 1}else return-1;else return i-r;return n.localeCompare(t)},t.prototype._registerEventHandlers=function(n){var t=this;this.disposables.push(this._stopViewModel.makeTransitRequest.add(function(i){it.downloadTransitStop({stopId:n,dateTime:i},function(n,r){if(r&&r.resourceSets&&r.resourceSets.length&&r.resourceSets[0].resources&&r.resourceSets[0].resources.length){var u=r.resourceSets[0].resources[0];t._stopViewModel.processTransitStop(u,i)}})}));this.disposables.push(this._stopViewModel.flipToTransitLine.add(function(n){n.entryPoint=y.TransitStop;n.activationEntryPoint=5;n.flippingCard=!0;e.invokeHandler(u.taskDataHandlerKey,{type:s.transitLineTask,activateOptions:{parentId:t.id,groupName:"TransitLine"},state:n})}))},t}(ut),gi=function(n){function t(t,i,u,f,e,o){var s=this,c={};return s=n.call(this,c,t,h.oneMapStyleChanges?ai:li)||this,s.nearbyStopSet=i||{stops:[]},s.nearbyStops=[],s.processNearbyStopSet(s.nearbyStopSet),s._poiManager=u,s._poiManager&&s.disposables.push(s._poiManager.poiViewStateChanged.add(function(n){s._onPoiViewStateChanged(n)})),s._poiManager&&s.disposables.push(s._poiManager.poiTapped.add(function(n){s._onPoiTapped(n)})),s.scrollLane=f,s._location=e,s._title=o,c.defineProperty("errorMessage"),s.resources=r,s}return v(t,n),t.prototype.processNearbyStopSet=function(n){var f,u,t,r,e,o;if(n.stops&&n.stops.length!==0)for(f=Math.min(h.nearbyStopMaxShown,n.stops.length),u=0;u<f;u++)t=n.stops[u],r={},r.departingLines=[],r.index=u,t&&t.departingLines&&t.stopName&&(r.stopName=t.stopName,r.departingLines=this.processDepartingLines(t.departingLines),r.stopId=t.stopId.toString(),e=new w(t.position.coordinates[0],t.position.coordinates[1]),r.location=e,t.GCDMetersFromQueryPoint||(t.GCDMetersFromQueryPoint=0),r.distance=h.unit==1?i._readableTextFromDistance(t.GCDMetersFromQueryPoint,!1):i._readableTextFromDistance(t.GCDMetersFromQueryPoint,!0),o=i._distanceToWalkTime(t.GCDMetersFromQueryPoint/1e3),r.travelTime=i._formatDurationString(o,!0)),r&&r.departingLines&&r.stopName&&r.travelTime&&(this.nearbyStops[u]=r)},t.prototype.processDepartingLines=function(n){for(var i=[],t=0;t<n.length;t++)i[t]={lineColor:n[t].lineColor,lineTextColor:n[t].lineTextColor,name:n[t].name,headSigns:this.processHeadSigns(n[t].termini),transitType:n[t].transitType};return i},t.prototype.processHeadSigns=function(n){for(var i=[],t=0;t<n.length;t++)i[t]={name:n[t].headSign||"",departureTime:this.timeStringToDisplayString(n[t].departures[0].departFromStop)};return i},t.prototype.displayError=function(n){return this.boolToDisplay(!n||!n.length)},t.prototype.displayList=function(n){return this.boolToDisplay(n&&n.length>0)},t.prototype.getLineColor=function(n){return i._formatHexColorString(n,t.defaultLineColor)},t.prototype.transitTypeToString=function(n){var t="departingLine ";switch(n){case 2:case 3:t+="lightRail";break;case 4:t+="railway";break;case 5:t+="ferry";break;case 6:t+="cableCar";break;case 7:t+="subway";break;case 8:t+="cableCar";break;case 0:case 1:default:t+="bus"}return t},t.prototype.displayHeadSignError=function(n){return this.boolToDisplay(!n||!n.length)},t.prototype.onMouseOver=function(n){f(n.currentTarget).add_class("hover");var i=this._getElementDataIndex(n.currentTarget),t=this._poiManager.getPrimitiveAt(i);t.viewState=1;t.zIndex=2;this._hoverPoi=t;t.entity.changed.invoke({sender:t.entity});d.logInstrumentationEvent(b.ITH,{})},t.prototype.onMouseOut=function(n){var t=this._hoverPoi;f(n.currentTarget).remove_class("hover");t&&(t.viewState=0,t.zIndex=0,t.entity.changed.invoke({sender:t.entity}),this._hoverPoi=null)},t.prototype._onPoiViewStateChanged=function(n){var t=n.primitive.entity,i=t.htmlElement.select(".nearbySection");if(t&&t.htmlElement)switch(n.newValue){case 1:i.add_class("hover");this.scrollLane.invoke(t.htmlElement);d.logInstrumentationEvent(b.NPH,{L:t.getLocation()});break;case 0:i.remove_class("hover")}},t.prototype._getElementDataIndex=function(n){while(!n.getAttribute("data-index"))n=n.parentElement;return parseInt(n.getAttribute("data-index"))},t.prototype._onPoiTapped=function(n){var t=n&&n.primitive&&n.primitive.entity;t&&this.launchStopCardFromPoi(t)},t.prototype.launchStopCardFromPoi=function(n){this.launchStopCard(n.id,n.getTitle(),n.getLocation(),3,n.getPrimaryCategoryPath())},t.prototype.launchStopCardFromStopElement=function(n){var t;if(n.preventDefault(),this._walkBlockClicked){this._walkBlockClicked=!1;return}var r=n.currentTarget,u=this._getElementDataIndex(r),i=this._poiManager.getPrimitiveAt(u);this._hoverPoi=null;i&&i.entity&&(t=i.entity,this.launchStopCard(t.id,t.getTitle(),t.getLocation(),2,t.getPrimaryCategoryPath()))},t.prototype.launchDirectionsCard=function(n){this._walkBlockClicked=!0;n.preventDefault();var i=n.currentTarget,r=parseInt(i.parentElement.parentElement.parentElement.parentElement.getAttribute("data-index")),f=this._poiManager.getPrimitiveAt(r),t=f.entity,o=new pt(t.getTitle(),t.getLocation()),h=new pt(this._title,this._location),c={waypoints:[h,o],mode:ft.walking,entryPoint:9};e.invokeHandler(u.taskDataHandlerKey,{action:"activate",type:s.directionsTask,state:c})},t.prototype.timeStringToDisplayString=function(n){var t;if(n){t=new Date(i._getTime(n));t.setHours(t.getHours()+7);var u=new Date,f=t.getTime()-u.getTime(),e=f/1e3;return i._formatString(r.L_UpcomingTrip,i._formatDurationString(e))}return null},t.prototype.launchStopCard=function(n,t,i,r,f){var o={id:parseInt(n),title:t,location:i,activationEntryPoint:r,catId:f};e.invokeHandler(u.taskDataHandlerKey,{type:s.transitStopTask,state:o})},t.defaultLineColor="#0084f4",t}(vt),dt=function(n){function t(u,f,e,o,s,c,l,v,y,p,w,b,k,d){var g=this,nt={},ut,rt,tt,it;if(g=n.call(this,nt,u,h.oneMapStyleChanges?vi:pi,o,s)||this,g.onCurrentLineChanged=new a,g.onStopHovered=new a,g._tripContainers=w,g._headSign=p,nt.defineProperty("currentLine",function(){g.onCurrentLineChanged.invoke()}),nt.defineProperty("stopList"),nt.defineProperty("currentTrips"),nt.defineProperty("isCollapsed",function(n,t){var u=g.getBaseStopIsSet(),i=g._fullStopList,e,f;t&&u>2&&(e={isPlaceholder:!0,position:null,stopId:null,stopName:r.L_CollapsedText.replace("{0}",""+(u-1))},i&&i.length&&(i=[i[0],e].concat(i.slice(u))));f=g.getStopList();f&&f.length==i.length||g.setStopList(i)}),nt.defineProperty("baseStopIsSet"),g._baseStopId=y,g._stopIconsExistFlag=!1,g.lineName=c,g.lineColor=i._formatHexColorString(l,"#2b86ee"),g.topLineColor=i._formatHexColorString(l,""),g.lineTextColor=v,g.stopIcon=lt.CreateStopIcon(g.lineColor?t.transitLineCenterColor:null),g.endStopIcon=lt.CreateEndStopIcon(),g.baseStopIcon=lt.CreateBaseStopIcon(),f&&g._processTransitLineInfo(f),g.transitLines=f,g.agencyName=b,g.phoneNumber=k,g.agencyUri=d,g.setErrorMessage(""),g.transitLines&&g.transitLines.length){if(ut=0,g._headSign)for(rt=0;rt<g.transitLines.length;rt++)if(g.transitLines[rt].headsign.toLowerCase()===g._headSign.toLowerCase()){ut=rt;break}tt=g.transitLines[ut];g._headSign&&(tt.headsign&&tt.headsign.toLowerCase()===g._headSign.toLowerCase()||tt.headsign===""&&g._headSign===kt.blankHeadsignIndicator)&&g._tripContainers&&(it=g._tripContainers[g._headSign]);it&&it.length>3&&(it=it.slice(0,3));g.setCurrentTrips(it);g.setCurrentLine(tt);g.setInitialStopList(tt)}return g}return v(t,n),t.prototype.showBackButton=function(n){return n===y.TransitStop?"":"none"},t.prototype.displayDropdown=function(){return this.boolToDisplay(!1)},t.prototype.getRemoveAction=function(n){return f.Internals.stringify({action:"remove",id:n})},t.prototype.buildStopTaskOptions=function(n){var i={},t;return n&&!n.isPlaceholder&&(t={id:n.stopId,location:new w(n.position.coordinates[0],n.position.coordinates[1]),title:n.stopName,activationEntryPoint:4},t.entryPoint=y.TransitLine,t.flippingCard=!1,i={type:s.transitStopTask,state:t}),i},t.prototype.buildStopTaskOptionsString=function(n){return f.Internals.stringify(this.buildStopTaskOptions(n))},t.prototype.setInitialStopList=function(n){var t=n&&n.stops,r,i,u,f;if(t&&t.length){for(r=-1,i=0;i<t.length;i++)if(t[i].stopIndex=i,t[i].currentTrips=[],t[i].stopId===this._baseStopId)for(r=i,t[r].isBaseStop=!0,t[r].currentTrips=this.getCurrentTrips(),this.setBaseStopIsSet(r),u=1;u<r;u++)t[u].isCollapsible=!0;t[0].isEndStop=!0;f=t.length-1;t[f].isEndStop=!0;t[f].isLastStop=!0}this._fullStopList=t;this.setIsCollapsed(!0)},t.prototype.getStopClassName=function(n){return n&&(n.isBaseStop?"baseStop ":"")+(n.isEndStop?"endStop stopContainer":"stopContainer")},t.prototype.getLineClassName=function(n){return n?"stopLine last":"stopLine"},t.prototype.getLineColor=function(n){return n&&(n.isCollapsible||n.isPlaceholder||n.stopIndex===0&&this.getBaseStopIsSet())?i._formatString("rgba({0}, {1}, {2}, 0.40)",parseInt(this.lineColor.slice(1,3),16),parseInt(this.lineColor.slice(3,5),16),parseInt(this.lineColor.slice(5),16)):this.lineColor},t.prototype.displayCollapser=function(n){return this.boolToDisplay(n>1)},t.prototype.getCollapseClass=function(n){return n?"collapser downArrow":"collapser upArrow"},t.prototype.getVectorTemplate=function(n){return n===null?null:n.isBaseStop?this.baseStopIcon:n.isEndStop?this.endStopIcon:this.stopIcon},t.prototype.agencyUriToClassName=function(n){return"agencyNameLink"+(n?"":" noLink")},t.prototype.onAgencyNameClick=function(){c.logInstrumentationEvent(p.ALC,{})},t.prototype.onStopListHover=function(n){this.onStopHovered.invoke(n)},t.prototype.onStopEntryClicked=function(n){var r,u=n.currentTarget.attributes["data-index"],t,i,f;if(u&&(r=parseInt(u.value)),t=this.getCurrentLine(),t&&t.stops&&(i=t.stops[r]),i)f=new w(i.position.coordinates[0],i.position.coordinates[1]),l.logInstrumentationEvent(o.SEC,{L:f});else this.onCollapseButtonClicked(null)},t.prototype.onCollapseButtonClicked=function(){this.setIsCollapsed(!this.getIsCollapsed())},t.prototype.onDropdown=function(n){n&&l.logInstrumentationEvent(o.RDO,{})},t.prototype._processTransitLineInfo=function(n){for(var t=0;t<n.length;t++){var i=n[t].stops[0]&&n[t].stops[0].stopName,u=n[t].stops.length-1,f=n[t].stops[u]&&n[t].stops[u].stopName;n[t].text=i&&f&&r.L_TransitLine_Dropdown_Entry?r.L_TransitLine_Dropdown_Entry.replace("{0}",i).replace("{1}",f):n[t].headsign||n[t].verboseName;n[t].value=t}},t.transitLineCenterColor="#808080",t}(bt);nt.TransitStopTask=rt;nt.TransitLineTask=di;nt.NearbyTransitTask=ki;nt.TransitRequester=it}catch(gt){if(n.logger)n.logger.logCriticalError(gt);else throw gt;}}).call(window)