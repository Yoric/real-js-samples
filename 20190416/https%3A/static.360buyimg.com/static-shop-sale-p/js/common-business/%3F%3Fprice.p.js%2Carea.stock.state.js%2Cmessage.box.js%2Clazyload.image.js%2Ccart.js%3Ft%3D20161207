/*
 * @function：获取“京东主站”商详页价格
 * @description：
 * 应用场景：需要取价格的模块
 * @param：
 * @author：cdwanchuan@jd.com 2016-07-29
 * @INTERFACE：//p.3.cn/prices/mgets?skuids=J_10117936979,J_10106569939,J_10132943930&type=2&callback=callBackPriceService&_=1469762420897 callBackPriceService([{"id":"J_10117936979","p":"74.50","m":"149.00"},{"id":"J_10106569939","p":"349.50","m":"699.00"},{"id":"J_10132943930","p":"179.55","m":"399.00"}]);

 */

(function (w) {
    var param = {
        tagAttr: 'span[jshop="price"]',//价格伪属性
        attrName: 'jshop',
        jdprice: 'jdprice', //京东价
        jlprice: 'jlprice', //分期价格
        jdPgPrice: '.jdPgPrice', // 拼购价格
        //By cdhewu, 店铺装修不需要按照布局节点滚动获取价格
        // appId : '#appId',//装修页面隐藏域
        layoutContainer: 'body', //滚动节点：装修页面
        maxCount: 10, //传入的sku最大限制
        //  针对老模块的pop店铺自营打标
        selfTag: '<span class="cd-self-tag J-selfTag">自营</span>',
        nameNode: '.jDesc a'
    };

    var nodes = [],//存储处理过的节点
        skuidStr = '', //拼装的sku字符串
        nodesShow = [],//临时数组：存储当前需要处理的节点
        nodesTemp = [];//临时数组：存储当前页面已经显示的节点

    /** 对获取到的节点对象进行处理：去重 */
    function _price_unique(arr) {
        if (!arr instanceof Array) throw new Error('_price_unique:arguments error');
        var __tem1 = {}, __tem2 = [], __tem3 = [];
        for (var i = 0, len = arr.length; i < len; i++) {

            var __obj = jQuery(arr[i]),
                __sku = __obj.attr(param.jdprice) || __obj.attr(param.jlprice);
            if (__tem1[__sku] == undefined) {
                __tem2.push(arr[i]);
                __tem1[__sku] = __obj.offset().top;
                __tem3.push(__sku);
            }
            else if (__tem1[__sku] > __obj.offset().top) {
                __tem2[__tem3.getIndex(__sku)] = arr[i];
                __tem1[__sku] = __obj.offset().top;
            }
        }
        return __tem2;
    }

    /** 获取处理过的节点数组 */
    function _get_nodes() {
        nodes = _price_unique(jQuery(param.tagAttr).toArray());
    }

    /** 获取商品价格*/
    function _load() {
        nodesTemp = [];//  初始化
        _get_nodes();
        var __top = jQuery(window).scrollTop() + jQuery(window).height();
        for (var i = 0, len = nodes.length; i < len; i++) {//遍历全部节点
            var __node = jQuery(nodes[i]);
            if ($('#J_PageMain').length) {
                // 如果是装修页面，加载全部价格标签
                nodesTemp.push(nodes[i]);
            } else {
                var offTop = __node.offset().top;
                if ( offTop > 0 && offTop < __top ) {//当前页面上展示出来的节点，位置高度就会小于当前窗口和页面滚动条的和
                    nodesTemp.push(nodes[i]);//展示出来的就存到临时数组
                }
            }
        }
        if (nodesTemp.length > 0) {
            //  这里的处理主要是因为，当autoPartition的异步调用还没执行时，可能已经再次触发了_load事件，将nodesTemp置为了空，导致不能正确加载价格
            nodesShow = nodesTemp.concat([]);
            $.when(autoPartition({ skuIds: nodesShow })).then(function() {
                getData();
                getTag();
            });
        }
    }

    /** 获取数据 */
    function getData() {
        var len = Math.ceil(nodesShow.length / param.maxCount);

        for (var i = 0; i < len; i++) {
            var skuFragment = nodesShow.slice(i * param.maxCount, Math.min(nodesShow.length, (i + 1) * param.maxCount));

            var prefix = 'J_',
                priceUrl = INTERFACE.price.jd,
                postData = {
                    source: 'jshop',
                    area: CookieUtil.getCookie('ipLoc-djd') ? CookieUtil.getCookie('ipLoc-djd').replace(/-/g, '_') : ''//浏览该商品用户的地址信息串,用下划线将多级地址ID从高到低连接,如果不传则获取全国最高价
                };
            // 1号店价格接口不加J_前缀，加上渠道ID，修改source为'jshopact'
            if ($('#J_AppType').val() === '3') {
                prefix = '';
                postData.source = 'jshopact';
                postData.origin = '8';
                priceUrl = INTERFACE.price.yhd;
            }
            //拼装skuid字符串
            skuidStr = '';
            var leaseSkuidStr = ''; //拼装的分期价格sku字符串
            var pgSkuids = []; // 拼购商品sku集合
            for (var j = 0; skuFragment[j]; j++) {
                if (jQuery(skuFragment[j]).attr(param.jlprice)) {
                    leaseSkuidStr += jQuery(skuFragment[j]).attr(param.jlprice) + ',';
                } else {
                    skuidStr += prefix + jQuery(skuFragment[j]).attr(param.jdprice) + ',';
                    if (jQuery(skuFragment[j]).siblings(param.jdPgPrice).length) {
                        pgSkuids.push(jQuery(skuFragment[j]).siblings(param.jdPgPrice).attr('data-id'));
                    }
                    // pingou test
                    // pgSkuids.push(jQuery(skuFragment[j]).attr(param.jdprice))
                }
                //避免请求还没返回就又把节点加载进去重复发送请求，先去掉节点属性
                jQuery(skuFragment[j]).removeAttr('jshop');
            }
            postData.skuids = skuidStr;

            // 如果发现有分期用的商品，就走分期用的接口,目前分期用商品只有搜索接口会打标，所以这里只针对主从，分页，全部商品，高级搜索模块。
            // 20171020，by cdhewu
            if (leaseSkuidStr) {
                jQuery.ajax({
                    url: INTERFACE.price.leasePrice,
                    data: { skuIds: leaseSkuidStr },
                    dataType: 'jsonp',
                    success: function (data) {
                        // 如果商品下架或者售罄，接口不会返回对应的sku，所以这里对比一下前后的sku，设置售罄状态
                        if (leaseSkuidStr.split(',').length - 1 !== data.data.length) {
                            var resultSkuIdList = data.data.map(function (item) {
                                return item.skuId + '';
                            });
                            leaseSkuidStr.split(',').each(function (index, item) {
                                if (item && $.inArray(item, resultSkuIdList) === -1) {
                                    w.JD_price._set_sold_out({
                                        id: item
                                    });
                                    var soldOutGood = jQuery('span[' + param.jlprice + '=' + item + ']');
                                    soldOutGood.removeAttr('jshop').html('暂无定价');
                                    soldOutGood.siblings('.jdStages').css('display', 'none');
                                }
                            });
                        }
                        callBackLeasePriceService(data.data);
                    },
                    error: function(e){
                        if(e && e.statusText === 'timeout'){// 只把网络请求超时的补回来
                            leaseSkuidStr.split(',').each(function (index, item) {
                                if(item && item !== 'undefined'){ //没有skuID的也过滤掉
                                    var leaseGood = jQuery('span[' + param.jlprice + '=' + item + ']');
                                    if( leaseGood )leaseGood.attr('jshop', 'price');
                                }
                            });
                        }
                    }
                });
            }

            if (skuidStr) {
                jQuery.ajax({
                    url: priceUrl,
                    data: postData,
                    dataType: 'jsonp',
                    success: function (data) {
                        callBackPriceService(data);
                    },
                    error: function(e){// 如果请求失败，再把节点的属性返回回来
                        if(e && e.statusText === 'timeout'){// 只把网络请求超时的补回来
                            skuidStr.split(',').each(function (index, item) {
                                item = item.replace(prefix, '');
                                if(item && item !== 'undefined'){ //没有skuID的也过滤掉
                                    var jdGood = jQuery('span[' + param.jdprice + '=' + item + ']');
                                    if( jdGood ) jdGood.attr('jshop', 'price');
                                }
                            });
                        }
                    }
                });
            }

            presaleHidePrice(skuidStr);

            // console.log('pgSkuids:', pgSkuids);
            if (pgSkuids.length) {
                jQuery.ajax({
                    url: INTERFACE.price.pgPrice,
                    data: {
                        // skuids=20833619754&origin=5&source=pingou&area=19_1607_3155_0&platform=2
                        skuids: pgSkuids.join(','),
                        origin: 1,
                        source: 'pcJShop',
                        area: '1_0_0',
                        platform: 6
                    },
                    dataType: 'jsonp',
                    callback: 'jsonpCBKB',
                    success: function (data) {
                        // console.log('pgSkuids ajax', data);
                        if (data.iRet == 0) {
                            callBackPgPriceService(data.pingou_info);
                        }

                    },
                    error: function (err) {
                        console.log('pgSkuids ajax error:', err);
                    }
                });
            }
        }
    }

    /**
     * 获取预售状态并决定是否将价格改为“待发布”
     */
    function presaleHidePrice(skuids) {
        skuids = skuids.replace(/J_/g, '');
        getPresaleInfo(skuids).then(function (data) {
            if (data.result === true) {
                var map = data.skuMap;
                for (var sku in map) {
                    var shouldHide = map[sku].hidePrice;
                    var isPresale = (map[sku].status != 4 && map[sku].status != 5);
                    if (shouldHide === true && isPresale) {
                        hidePrice(sku);
                    }
                }
            }
        });

        /**
         * 将该sku对应的节点价格替换为“待发布”，并打上标data-hide-price
         * @param {string} sku sku
         */
        function hidePrice(sku) {
            $('[jdprice="' + sku + '"]').each(function () {
                var $node = $(this);
                $node.html('待发布').attr('data-hide-price', 'true');
            });
        }

        function getPresaleInfo(skuids) {
            var promise = $.Deferred();
            $.ajax({
                url: '//f-mall.jd.com/product/checkOrder.html',
                data: {
                    skuIds: skuids
                },
                dataType: 'jsonp',
                success: function (data) {
                    promise.resolve(data);
                }
            });
            return promise.promise();
        }

    }

    /**
     * 获取自营标签
     */
    function getTag() {
        if ($('#isFuseShop').val() !== 'true') {
            return false;
        }
        if (nodesShow.length === 0) {
            return false;
        }

        var len = Math.ceil(nodesShow.length / param.maxCount);
        for (var i = 0; i < len; i += 1) {
            var fragment = nodesShow.slice(i * param.maxCount, Math.min(nodesShow.length, (i + 1) * param.maxCount));
            var skuIds = [];
            fragment.each(function (index, item) {
                if ($(item).attr(param.jdprice)) {
                    skuIds.push($(item).attr(param.jdprice));
                } else if ($(item).attr(param.jlprice)) {
                    skuIds.push($(item).attr(param.jlprice));
                }
            });

            $.ajax({
                url: '//f-mall.jd.com/product/getSelfState',
                data: {
                    skuIds: skuIds.join()
                },
                dataType: 'jsonp',
                success: function (data) {
                    if (data.result) {
                        data.productState.forEach(function (skuid) {
                            var jdItem = $('span[jdprice="' + skuid + '"]');
                            var jlItem = $('span[jlprice="' + skuid + '"]');

                            jdItem.each(function (index, jdItem) {
                                renderTag(jdItem);
                            });

                            jlItem.each(function (index, jlItem) {
                                renderTag(jlItem);
                            });
                        });
                    }
                }
            });
        }

        function renderTag(priceItem) {
            var item = $(priceItem).closest('li');
            var name = item.find(param.nameNode);

            if (name.find('.J-selfTag').length === 0) {
                name.prepend(param.selfTag);
            }
        }
    }

    /** 滚动时，获取商品价格*/
    function _event_register() {
        if (nodes.length) {
            jQuery(getPageType() == 3 ? param.layoutContainer : window).bind('scroll resize', _load);
            //By cdhewu, 店铺装修不需要按照布局节点滚动获取价格
            // jQuery(window).bind('scroll resize', _load);
        }
    }

    function _init() {
        _get_nodes();
        _load();
        _event_register();
    }

    /** 模块内容刷新时使用 */
    w.JD_local_price = function (obj) {
        var nodesModule = _price_unique(obj.find(param.tagAttr).toArray());
        nodesShow = nodesModule;
        getData();
        getTag();
    };

    /** 价格请求回调函数 */
    w.callBackPriceService = function (data) {
        var skuid = 0;
        for (var i = 0, len = data.length; i < len; i++) {
            // 非1号店的价格接口返回的skuId，统一加了个前缀'J_'，这里把这个前缀去掉
            if ($('#J_AppType').val() !== '3') {
                skuid = data[i].id.substr(2);
                data[i].id = skuid;
            }
            getNumPriceService(data[i]);
        }
    };

    /** 分期价格请求回调函数 */
    w.callBackLeasePriceService = function (data) {
        var skuid = 0;
        for (var i = 0, len = data.length; i < len; i++) {
            skuid = data[i].skuId;
            data[i].id = skuid;
            getNumPriceService(data[i]);
        }
    };

    /** 拼购价格请求回调函数 */
    w.callBackPgPriceService = function (data) {
        var skuid = 0;
        for (var i = 0, len = data.length; i < len; i++) {
            skuid = data[i].sku_id;
            data[i].id = skuid;
            JD_price._set_pg_price(data[i]); // 设置拼购价格
        }
    };

    //预览页面2和二级页面浏览4使用了bigpipe加载，需要调用getRenderPrice；
    window.getRenderPrice = _init;

    jQuery(function () {
        var pageType = getPageType();
        if (pageType != 2 && pageType != 4) {
            _init();
        }
    });
})(window);

/**************************************price data fill******************************************/
(function ($, w) {
    w.JD_price = {
        /*
         * 设置京东价
         */
        _set_jd_price: function (data, tag) {
            var _price = data.p >= 0 ? data.p : tag;
            jQuery('span[jdprice=' + data.id + ']').each(function (index, n) {
                var $node = $(n);
                // 如果该sku是预售商品且需要展示为“待发布”，则这里不展示京东价
                if ($node.attr('data-hide-price') === 'true') {
                    return;
                }
                $node.removeAttr('jshop').html(_price);
            });
            if (data.p < 0) {
                w.JD_price._set_sold_out(data);
            }
        },
        /*
         * 设置市场价
         */
        _set_sale_price: function (data, tag) {
            var _price = data.m >= 0 ? data.m : tag;
            $('span[jsprice=' + data.id + ']').each(function (index, n) {
                $(n).removeAttr('jshop').html(_price);
            });
        },
        /*
         * 设置山姆会员价
         */
        _set_sp_price: function (data, tag) {
            var _price = data.sp >= 0 ? data.sp : tag;
            $('span[jspprice=' + data.id + ']').each(function (index, n) {
                $(n).removeAttr('jshop').html(_price);
            });
            if (data.p < 0) {
                w.JD_price._set_sold_out(data);
            }
        },
        /*
         * 设置分期价格
         */
        _set_le_price: function (data) {
            jQuery('span[jlprice=' + data.id + ']').each(function (index, n) {
                var stages = jQuery(n).siblings('.jdStages');
                jQuery(n).removeAttr('jshop').html(data.leastPlanAmount + '<span> /期</span>');
                stages.html('共' + data.longestPlanStages + '期');
            });
        },
        /*
         * 设置拼购价格
         */
        _set_pg_price: function (data) {
            // console.log('_set_pg_price:', data);
            jQuery('span[jdprice=' + data.id + ']').each(function (index, n) {
                // if(data.isPriceValid) {
                //     $('<span class="jdPgPrice">¥' + data.bp + ' ' + data.tuan_member_count + '人拼</span>').insertAfter($(n));
                // }
                var jdPgPrice = jQuery(n).siblings('.jdPgPrice');
                if (data.isPriceValid) {
                    jdPgPrice.html('¥' + data.bp + ' ' + data.tuan_member_count + '人拼');
                } else {
                    jdPgPrice.remove();
                }
            });
        },
        /*
         * 设置已售完
         */
        _set_sold_out: function (data) {
            var htmlSoldOut = '<div class="d-soldout">'
                + '<a href="#" target="_blank">'
                + '<span class="d-soldout-bg"></span>'
                + '<b></b>'
                + '</a>'
                + '</div>',
                styleSoldOut = '<style id="J_styleSoldOut">'
                    + '.d-soldout{display:block; top:0; height:100%; position:absolute; left:0; width:100%; -webkit-transition: all .2s ease-out; -moz-transition: all .2s ease-out; -ms-transition: all .2s ease-out; -o-transition: all .2s ease-out; transition: all .2s ease-out;}'
                    + '.d-soldout .d-soldout-bg{height: 100%; opacity: .4; filter: alpha(opacity=40); position: absolute; left: 0; top: 0; z-index: 1; width: 100%; background: #000;}'
                    + '.d-soldout b{background: url(//img10.360buyimg.com/cms/jfs/t2977/349/2488392477/6460/7b22cb4c/57b136c4N366eaa28.png) no-repeat;position: absolute; left: 50%; top: 50%; z-index: 2; width: 160px; height: 160px; margin-left: -80px; margin-top: -80px;}'
                    + '.d-sold-out .d-stock{display:none;}'
                    + '</style>';

            if (jQuery('#J_styleSoldOut').length == 0) {//判断当前页面上是否已经有售罄样式
                jQuery('body').append(styleSoldOut);
            }

            var updateFlag = false;
            $.merge(jQuery('[jdprice=' + data.id + ']'), jQuery('[jlprice=' + data.id + ']')).each(function (index, n) {
                var currentNode = jQuery(n).closest('li');
                if (!currentNode.data('isSold')) {
                    if (currentNode.css('position') == 'static') {//如果当前节点没有相对定位或绝对定位属性
                        currentNode.css('position', 'relative');
                    }
                    JD_price.autoReplaceGoods(currentNode);
                    currentNode.append(htmlSoldOut.replace(/#/, currentNode.find('a').attr('href'))).data('isSold', true).addClass('d-sold-out');
                    // 判断当前模块是否允许重新排序。20161230，赵增俊，主要是防止设计师模板在重新排序后商品展示错乱。
                    if (!(currentNode.closest('.j-module').attr('module-function') && currentNode.closest('.j-module').attr('module-function').indexOf('ridSort') != -1)) {
                        updateFlag = true;
                        // By cdhewu, 将已售罄的商品移动到模块最后
                        currentNode.closest('ul').append(currentNode);
                        // 重新执行autoQueue和autoFill方法
                        moduleFunctionRefresh.call(currentNode.closest('.j-module'), 'autoQuene');
                        moduleFunctionRefresh.call(currentNode.closest('.j-module'), 'autoFill');
                    }
                }
            });
            if (updateFlag) {
                jQuery(w).trigger('scroll');
            }
        },

        // 浏览界面，商品推荐模块，需要判断是否需要换货
        autoReplaceGoods: function (currentNode) {
            // 预览页面，装修页面，或者1号店店铺所有页面，都不执行补货逻辑
            if (getPageType() === 2 || getPageType() === 3 || $('#J_AppType').val() === '3') {
                return;
            }
            var moduleNode = currentNode.parents('div[module-name="GoodsRec"]');
            // 如果当前节点的模块不是商品推荐模块，不执行
            if (!moduleNode.length) {
                return;
            }
            // 如果当前模块已经执行过自动替换，就不再执行
            if ($(moduleNode).attr('isAutoPlace') === 'true') {
                return;
            }
            $(moduleNode).attr('isAutoPlace', 'true');
            // 出于安全考虑，后台会自己获取模块skuId，并调用后台接口检测商品是否下架。
            // var goodsNodes = $(moduleNode).find('span[jshop="price"]'),
            //拼装skuid字符串
            // skuidStr = '';
            // for(var j = 0; goodsNodes[j]; j++){
            //     skuidStr += jQuery(goodsNodes[j]).attr('jdprice') + ',';
            // }
            jQuery.ajax({
                url: INTERFACE.price.replaceGoods,
                data: {
                    // allGoodsIdStr: skuidStr,
                    pageInstanceId: $('#pageInstance_id').val(),
                    moduleInstanceId: $(moduleNode).attr('instanceid')
                },
                dataType: 'jsonp',
                success: function (data) {
                    // 不需要关心返回结果，自动替换的商品会在第二次刷新页面的时候生效
                }
            });
        }
    };

    /*
     * 填充价格
     */
    w.getNumPriceService = function (data) {
        if (!data) return;
        var _no_price_tag = '暂无定价';
        JD_price._set_jd_price(data, _no_price_tag);
        JD_price._set_sale_price(data, _no_price_tag);//获取市场价，服饰有吊牌价
        JD_price._set_sp_price(data, _no_price_tag);//获取山姆会员价
        JD_price._set_le_price(data, _no_price_tag);//设置分期价格
    };
})(jQuery, window);

(function (window) {
    window.autoPartition = function (args) {
        var param = jQuery.extend({
                skuIds: [],//传入的sku
                jsprice: 'jsprice', //skuid的市场价 <span class="jdNum" jshop="price" jsprice="1964702652"></span> $!jshopPrice.getSalePrice($!{goods.goodsId})
                jdprice: 'jdprice', //skuid的前台京东价 <span class="jdNum" jshop="price" jdprice="1964702652"></span>  $!jshopPrice.getJdPrice($!{goods.goodsId})
                jspprice: 'jspprice', //skuid的山姆会员价 <span class="jdNum" jshop="price" jspprice="1964702652"></span>
                jppprice: 'jppprice', //skuid的正式会员plus价 <span class="jdNum" jshop="price" jppprice="1964702652"></span>
                jtppprice: 'jtppprice', //skuid的正式+试用会员plus价 <span class="jdNum" jshop="price" jtppprice="1964702652"></span>
                jtkpprice: 'jtkpprice', //skuid的令牌价 <span class="jdNum" jshop="price" jtkpprice="10734205004"></span>
                jprice: 'jprice', //智能推荐价格 <span class="jdNum" jshop="price" jprice="10734205004"></span>
                jopprice: 'jopprice',   //skuid的原价 <span class="jdNum" jshop="price" jopprice="10734205004"></span>
                priceType: ['jsprice', 'jdprice', 'jspprice', 'jppprice', 'jtppprice', 'jtkpprice', 'jprice', 'jopprice'],
                maxCount: 20 //传入的sku最大限制
            }, args || {}),
            node = param.skuIds,
            aPriceType = param.priceType,
            num = param.maxCount,
            skuInfo = [],//存储所有sku信息
            _sku = [];//存储去重的sku

        //获取当前展示出来的节点skuid信息去重
        function getSkuInfo() {
            var venderId = jQuery('#vender_id').val();
            jQuery(node).attr('data-venderid', venderId);
            for (var i = 0; node[i]; i++) {
                var e = jQuery(node[i]);

                for (var j = 0; aPriceType[j]; j++) {
                    if (e.attr(aPriceType[j]) && !_sku.isIn(e.attr(aPriceType[j]))) {
                        _sku.push(e.attr(aPriceType[j]));//存储去重的sku，同一个商品调多个价格时，sku会重复

                        if (e.attr('data-cat') && e.attr('data-cat').length > 0) {//所有商品都有分类
                            var o = {
                                goodsId: e.attr(aPriceType[j]),
                                category: e.attr('data-cat'),//商品分类
                                fqsp: e.attr('data-fqsp') ? e.attr('data-fqsp') : 0,//通用分区
                                venderId: e.attr('data-venderId') ? e.attr('data-venderId') : 0//店铺ID
                            };
                            skuInfo.push(o);
                        } else {
                            var o = {
                                goodsId: e.attr(aPriceType[j]),//没有分类、fqsp、venderId就会判断为100无分区，就不取真实sku；
                                category: '0,0,0',//商品分类
                                fqsp: 0,//通用分区
                                venderId: 0//店铺ID
                            };
                            skuInfo.push(o);
                        }
                    }
                }
            }
        }

        function getAreaSku() {
            var len = Math.ceil(skuInfo.length / num); //循环次数
            var number = 0,
                //计数，累加
                total = 0, //计数，总数
                realSkuInfo = [];//存储分区skuId

            for (var i = 0; i < len; i++) {
                total = total + i;
            }
            for (var i = 0; i < len; i++) {
                var skuInfoFragment = skuInfo.slice(i * num, Math.min(skuInfo.length, (i + 1) * num));
                (function (len, i, skuInfoFragment) {
                    jQuery.when(getPartitionInfo({ skuInfo: skuInfoFragment, num: num })).done(function (data) {
                        if (data) {//如果有分区sku
                            for (var j = 0; skuInfo[j]; j++) {
                                for (var n in data) {
                                    if (n == skuInfo[j].goodsId) {
                                        skuInfo[j].realSkuId = data[n].realSkuId; //将分区sku覆盖老sku
                                        realSkuInfo.push(skuInfo[j]);
                                    }
                                }
                            }
                        }
                        number = number + i;
                        if (number == total) {
                            //判断是否请求完成
                            getGoodsInfo(realSkuInfo);//只修改有分区的商品节点
                        }
                    });
                })(len, i, skuInfoFragment);
            }
        }

        function getGoodsInfo(realSkuInfo) {
            if (realSkuInfo.length > 0) {
                for (var i = 0; realSkuInfo[i]; i++) {
                    for (var j = 0; aPriceType[j]; j++) {
                        var _node = jQuery('[' + aPriceType[j] + '=' + realSkuInfo[i].goodsId + ']');
                        if (_node && _node.length > 0) {
                            _node.each(function (n, e) {
                                var value = jQuery(e).attr(aPriceType[j]);
                                jQuery(e).attr(aPriceType[j], realSkuInfo[i].realSkuId);//预防没有li节点的情况

                                if (jQuery(e).closest('li').length > 0) {
                                    var reg = new RegExp(value, 'g');
                                    var str;
                                    if (~~value !== realSkuInfo[i].realSkuId) {
                                        jQuery(e).attr('jshop', 'price');
                                        jQuery(e).closest('li').find('.J_imgLazyload').not('[original]').each(function(index, img) {
                                            var $img = $(img);
                                            var src = $img.attr('src');
                                            $img.attr('original', src);
                                        });
                                        str = jQuery(e).closest('li').html().replace(reg, realSkuInfo[i].realSkuId);
                                        jQuery(e).closest('li').html(str);
                                    }
                                }
                            });
                            dtd.resolve(skuInfo);//返回被替换过的商品（分区+不分区）信息
                        }
                    }
                }
            } else {
                dtd.resolve(skuInfo);//返回商品（不分区）信息
            }
        }

        var venderId = $('#vender_id').val() || '';
        var partitionVender = ($('#partition_vender').val() || '').split(',');
        if (!(getPageType() === 4 || getPageType() === 1) || partitionVender.indexOf(venderId) < 0) {
            return false;
        }
        var dtd = jQuery.Deferred();

        getSkuInfo();
        if (skuInfo.length == 0) {
            return;
        }
        getAreaSku();

        return dtd.promise();
    };
})(window);

(function (window) {
    window.getPartitionInfo = function (args) {
        var param = jQuery.extend({
                skuInfo: [],//商品信息
                skuIds: [], //格式为：skuId_商品数量（默认是1），如果有多个，以英文逗号（“,”）分隔，比如：skuIds=11322972_1,11322973_2。skusId总数最多不得超过100个。
                bizType: 1, //大家电分区：0； 通用分区系统：1，包含消费品；山姆分区：2（603837）；
                cat: '0,0,0', //商品分类地址：默认0,0,0（调用商品去查；大促期间，影响可用率，可能会超时；）；以逗号（“,”）分隔
                area: CookieUtil.getCookie('ipLoc-djd') ? CookieUtil.getCookie('ipLoc-djd') : '1-72-0-0', //用户所在区域，获取不到默认北京市朝阳区；四级地址，以逗号（“_”）分隔，没有补0，比如：1_2810_51081_0
                ch: 1, //商城PC（京东主站）：1; 商城app（含pad）：2; 商城m（m.jd.com手机浏览器）：3; 微信：4; 手Q：5; 易迅PC：8; 未知渠道：9
                venderId: '', //如果是山姆商品，必须传递这个参数; 山姆会员商店官方旗舰店（603837）需要分区
                app: 'jshop', //调用方需要申请一个名字，便于管理
                num: 100 //一次性传入分区接口的sku数量（接口限制100）
            }, args || {}),
            area = param.area.split('-').join('_').split('.')[0],
            skuInfo = param.skuInfo;

        if (skuInfo.length === 0) {
            return false;
        }

        /* 拼装参数 */
        var skuIds = [];
        !function handleArgs() {
            for (var i = 0; skuInfo[i]; i++) {
                if (getBizType(skuInfo[i]) != 100) {
                    var str = skuInfo[i].goodsId + '|1|' + getBizType(skuInfo[i]) + '|' + skuInfo[i].category.replace(/,/g, '_');
                    if (getBizType(skuInfo[i]) == 2) {
                        skuIds.push(str + '|' + skuInfo[i].venderId);
                    } else {
                        skuIds.push(str + '|' + 0);
                    }
                }
            }
        }();

        if (skuIds.length === 0) {
            return false;
        }

        //20170809星期三
        //目前临时方案：分类值和venderId都通过cat参数传入的第一个商品信息判断

        /* 获取skuid业务类型（大家电和通用的根据配置的第一个sku的分类值判断，新接口上线替换前，用第一个的分类值代表，如果是分区，第一个必须为分区的商品，不然要出错） */
        function getBizType(skuData) {
            var bizType = 100; //默认没有分区
            var catVuale = [[794, 13297], [750, 758]]; //大家电二级和三级分类值

            if (skuData.venderId && skuData.venderId == '603837') {
                bizType = 2; //山姆
            } else if (skuData.category && catVuale[0].isIn(skuData.category.split(',')[1]) || catVuale[1].isIn(skuData.category.split(',')[2])) {
                bizType = 0; //大家电
            } else if (skuData.fqsp && skuData.fqsp > 0) {
                bizType = 1; //通用分区
            } else {
                bizType = 100; //没有分区
            }
            return bizType;
        }

        /* 获取可分区skuid */
        var dtd = jQuery.Deferred();
        jQuery.ajax({
            url: INTERFACE.realSku.mixPartition,
            data: {
                skuIds: skuIds.join(','),
                area: area,
                app: 'jshop'
            },
            dataType: 'jsonp',
            success: function success(data) {
                dtd.resolve(data);
            }
        });
        return dtd.promise();
    };
})(window);
/*
 * @function：获取商品状态
 * @description：根据不同区域参数，获取商品库存状态，有货和无货（根据sku+area定位到一个最优的配送中心 ，返回的就是这个配送中心和仓的库存状态）
 * 应用场景：商品类模块：商品推荐、商品分类推荐
 * @param：
 * @author：cdhewu@jd.com 2016-12-22
 * @INTERFACE：

*/

/** 因为其他方法里面有这样调用，这块定义暂不修改 */
/*
var jshop = jshop || {};
jshop.component = jshop.component || {};
var skuIdPriceObj = {};
*/

(function (w) {
    w.json_city = {
        '0': {
            '1': '北京',
            '2': '上海',
            '3': '天津',
            '4': '重庆',
            '5': '河北',
            '6': '山西',
            '7': '河南',
            '8': '辽宁',
            '9': '吉林',
            '10': '黑龙江',
            '11': '内蒙古',
            '12': '江苏',
            '13': '山东',
            '14': '安徽',
            '15': '浙江',
            '16': '福建',
            '17': '湖北',
            '18': '湖南',
            '19': '广东',
            '20': '广西',
            '21': '江西',
            '22': '四川',
            '23': '海南',
            '24': '贵州',
            '25': '云南',
            '26': '西藏',
            '27': '陕西',
            '28': '甘肃',
            '29': '青海',
            '30': '宁夏',
            '31': '新疆',
            '32': '台湾',
            '42': '香港',
            '43': '澳门',
            '52993': '港澳',
            '84': '钓鱼岛',
            '53283': '海外'
        },
        '1': {
            '72': '朝阳区',
            '2800': '海淀区',
            '2801': '西城区',
            '2802': '东城区',
            '2803': '崇文区',
            '2804': '宣武区',
            '2805': '丰台区',
            '2806': '石景山区',
            '2807': '门头沟',
            '2808': '房山区',
            '2809': '通州区',
            '2810': '大兴区',
            '2812': '顺义区',
            '2814': '怀柔区',
            '2816': '密云区',
            '2901': '昌平区',
            '2953': '平谷区',
            '3065': '延庆县'
        },
        '2': {
            '2813': '徐汇区',
            '2815': '长宁区',
            '2817': '静安区',
            '2820': '闸北区',
            '2822': '虹口区',
            '2823': '杨浦区',
            '2824': '宝山区',
            '2825': '闵行区',
            '2826': '嘉定区',
            '2830': '浦东新区',
            '2833': '青浦区',
            '2834': '松江区',
            '2835': '金山区',
            '2836': '南汇区',
            '2837': '奉贤区',
            '2841': '普陀区',
            '2919': '崇明县',
            '78': '黄浦区'
        },
        '3': {
            '51035': '东丽区',
            '51036': '和平区',
            '51037': '河北区',
            '51038': '河东区',
            '51039': '河西区',
            '51040': '红桥区',
            '51041': '蓟县',
            '51042': '静海县',
            '51043': '南开区',
            '51044': '塘沽区',
            '51045': '西青区',
            '51046': '武清区',
            '51047': '津南区',
            '51048': '汉沽区',
            '51049': '大港区',
            '51050': '北辰区',
            '51051': '宝坻区',
            '51052': '宁河县'
        },
        '4': {
            '113': '万州区',
            '114': '涪陵区',
            '115': '梁平县',
            '119': '南川区',
            '123': '潼南县',
            '126': '大足区',
            '128': '黔江区',
            '129': '武隆县',
            '130': '丰都县',
            '131': '奉节县',
            '132': '开县',
            '133': '云阳县',
            '134': '忠县',
            '135': '巫溪县',
            '136': '巫山县',
            '137': '石柱县',
            '138': '彭水县',
            '139': '垫江县',
            '140': '酉阳县',
            '141': '秀山县',
            '48131': '璧山县',
            '48132': '荣昌县',
            '48133': '铜梁县',
            '48201': '合川区',
            '48202': '巴南区',
            '48203': '北碚区',
            '48204': '江津区',
            '48205': '渝北区',
            '48206': '长寿区',
            '48207': '永川区',
            '50950': '江北区',
            '50951': '南岸区',
            '50952': '九龙坡区',
            '50953': '沙坪坝区',
            '50954': '大渡口区',
            '50995': '綦江区',
            '51026': '渝中区',
            '51027': '高新区',
            '51028': '北部新区',
            '4164': '城口县',
            '3076': '高新区'
        },
        '5': {
            '142': '石家庄市',
            '148': '邯郸市',
            '164': '邢台市',
            '199': '保定市',
            '224': '张家口市',
            '239': '承德市',
            '248': '秦皇岛市',
            '258': '唐山市',
            '264': '沧州市',
            '274': '廊坊市',
            '275': '衡水市'
        },
        '6': {
            '303': '太原市',
            '309': '大同市',
            '318': '阳泉市',
            '325': '晋城市',
            '330': '朔州市',
            '336': '晋中市',
            '350': '忻州市',
            '368': '吕梁市',
            '379': '临汾市',
            '398': '运城市',
            '3074': '长治市'
        },
        '7': {
            '412': '郑州市',
            '420': '开封市',
            '427': '洛阳市',
            '438': '平顶山市',
            '446': '焦作市',
            '454': '鹤壁市',
            '458': '新乡市',
            '468': '安阳市',
            '475': '濮阳市',
            '482': '许昌市',
            '489': '漯河市',
            '495': '三门峡市',
            '502': '南阳市',
            '517': '商丘市',
            '527': '周口市',
            '538': '驻马店市',
            '549': '信阳市',
            '2780': '济源市'
        },
        '8': {
            '560': '沈阳市',
            '573': '大连市',
            '579': '鞍山市',
            '584': '抚顺市',
            '589': '本溪市',
            '593': '丹东市',
            '598': '锦州市',
            '604': '葫芦岛市',
            '609': '营口市',
            '613': '盘锦市',
            '617': '阜新市',
            '621': '辽阳市',
            '632': '朝阳市',
            '6858': '铁岭市'
        },
        '9': {
            '639': '长春市',
            '644': '吉林市',
            '651': '四平市',
            '2992': '辽源市',
            '657': '通化市',
            '664': '白山市',
            '674': '松原市',
            '681': '白城市',
            '687': '延边州'
        },
        '10': {
            '727': '鹤岗市',
            '731': '双鸭山市',
            '737': '鸡西市',
            '742': '大庆市',
            '753': '伊春市',
            '757': '牡丹江市',
            '765': '佳木斯市',
            '773': '七台河市',
            '776': '黑河市',
            '782': '绥化市',
            '793': '大兴安岭地区',
            '698': '哈尔滨市',
            '712': '齐齐哈尔市'
        },
        '11': {
            '799': '呼和浩特市',
            '805': '包头市',
            '810': '乌海市',
            '812': '赤峰市',
            '823': '乌兰察布市',
            '835': '锡林郭勒盟',
            '848': '呼伦贝尔市',
            '870': '鄂尔多斯市',
            '880': '巴彦淖尔市',
            '891': '阿拉善盟',
            '895': '兴安盟',
            '902': '通辽市'
        },
        '12': {
            '904': '南京市',
            '911': '徐州市',
            '919': '连云港市',
            '925': '淮安市',
            '933': '宿迁市',
            '939': '盐城市',
            '951': '扬州市',
            '959': '泰州市',
            '965': '南通市',
            '972': '镇江市',
            '978': '常州市',
            '984': '无锡市',
            '988': '苏州市'
        },
        '13': {
            '2900': '济宁市',
            '1000': '济南市',
            '1007': '青岛市',
            '1016': '淄博市',
            '1022': '枣庄市',
            '1025': '东营市',
            '1032': '潍坊市',
            '1042': '烟台市',
            '1053': '威海市',
            '1058': '莱芜市',
            '1060': '德州市',
            '1072': '临沂市',
            '1081': '聊城市',
            '1090': '滨州市',
            '1099': '菏泽市',
            '1108': '日照市',
            '1112': '泰安市'
        },
        '14': {
            '1151': '黄山市',
            '1159': '滁州市',
            '1167': '阜阳市',
            '1174': '亳州市',
            '1180': '宿州市',
            '1201': '池州市',
            '1206': '六安市',
            '2971': '宣城市',
            '1114': '铜陵市',
            '1116': '合肥市',
            '1121': '淮南市',
            '1124': '淮北市',
            '1127': '芜湖市',
            '1132': '蚌埠市',
            '1137': '马鞍山市',
            '1140': '安庆市'
        },
        '15': {
            '1158': '宁波市',
            '1273': '衢州市',
            '1280': '丽水市',
            '1290': '台州市',
            '1298': '舟山市',
            '1213': '杭州市',
            '1233': '温州市',
            '1243': '嘉兴市',
            '1250': '湖州市',
            '1255': '绍兴市',
            '1262': '金华市'
        },
        '16': {
            '1303': '福州市',
            '1315': '厦门市',
            '1317': '三明市',
            '1329': '莆田市',
            '1332': '泉州市',
            '1341': '漳州市',
            '1352': '南平市',
            '1362': '龙岩市',
            '1370': '宁德市'
        },
        '17': {
            '1432': '孝感市',
            '1441': '黄冈市',
            '1458': '咸宁市',
            '1466': '恩施州',
            '1475': '鄂州市',
            '1477': '荆门市',
            '1479': '随州市',
            '3154': '神农架林区',
            '1381': '武汉市',
            '1387': '黄石市',
            '1396': '襄阳市',
            '1405': '十堰市',
            '1413': '荆州市',
            '1421': '宜昌市',
            '2922': '潜江市',
            '2980': '天门市',
            '2983': '仙桃市'
        },
        '18': {
            '4250': '耒阳市',
            '1482': '长沙市',
            '1488': '株洲市',
            '1495': '湘潭市',
            '1499': '韶山市',
            '1501': '衡阳市',
            '1511': '邵阳市',
            '1522': '岳阳市',
            '1530': '常德市',
            '1540': '张家界市',
            '1544': '郴州市',
            '1555': '益阳市',
            '1560': '永州市',
            '1574': '怀化市',
            '1586': '娄底市',
            '1592': '湘西州'
        },
        '19': {
            '1601': '广州市',
            '1607': '深圳市',
            '1609': '珠海市',
            '1611': '汕头市',
            '1617': '韶关市',
            '1627': '河源市',
            '1634': '梅州市',
            '1709': '揭阳市',
            '1643': '惠州市',
            '1650': '汕尾市',
            '1655': '东莞市',
            '1657': '中山市',
            '1659': '江门市',
            '1666': '佛山市',
            '1672': '阳江市',
            '1677': '湛江市',
            '1684': '茂名市',
            '1690': '肇庆市',
            '1698': '云浮市',
            '1704': '清远市',
            '1705': '潮州市'
        },
        '20': {
            '3168': '崇左市',
            '1715': '南宁市',
            '1720': '柳州市',
            '1726': '桂林市',
            '1740': '梧州市',
            '1746': '北海市',
            '1749': '防城港市',
            '1753': '钦州市',
            '1757': '贵港市',
            '1761': '玉林市',
            '1792': '贺州市',
            '1806': '百色市',
            '1818': '河池市',
            '3044': '来宾市'
        },
        '21': {
            '1827': '南昌市',
            '1832': '景德镇市',
            '1836': '萍乡市',
            '1842': '新余市',
            '1845': '九江市',
            '1857': '鹰潭市',
            '1861': '上饶市',
            '1874': '宜春市',
            '1885': '抚州市',
            '1898': '吉安市',
            '1911': '赣州市'
        },
        '22': {
            '2103': '凉山州',
            '1930': '成都市',
            '1946': '自贡市',
            '1950': '攀枝花市',
            '1954': '泸州市',
            '1960': '绵阳市',
            '1962': '德阳市',
            '1977': '广元市',
            '1983': '遂宁市',
            '1988': '内江市',
            '1993': '乐山市',
            '2005': '宜宾市',
            '2016': '广安市',
            '2022': '南充市',
            '2033': '达州市',
            '2042': '巴中市',
            '2047': '雅安市',
            '2058': '眉山市',
            '2065': '资阳市',
            '2070': '阿坝州',
            '2084': '甘孜州'
        },
        '23': {
            '3690': '三亚市',
            '3698': '文昌市',
            '3699': '五指山市',
            '3701': '临高县',
            '3702': '澄迈县',
            '3703': '定安县',
            '3704': '屯昌县',
            '3705': '昌江县',
            '3706': '白沙县',
            '3707': '琼中县',
            '3708': '陵水县',
            '3709': '保亭县',
            '3710': '乐东县',
            '3711': '三沙市',
            '2121': '海口市',
            '3115': '琼海市',
            '3137': '万宁市',
            '3173': '东方市',
            '3034': '儋州市'
        },
        '24': {
            '2144': '贵阳市',
            '2150': '六盘水市',
            '2155': '遵义市',
            '2169': '铜仁市',
            '2180': '毕节市',
            '2189': '安顺市',
            '2196': '黔西南州',
            '2205': '黔东南州',
            '2222': '黔南州'
        },
        '25': {
            '4108': '迪庆州',
            '2235': '昆明市',
            '2247': '曲靖市',
            '2258': '玉溪市',
            '2270': '昭通市',
            '2281': '普洱市',
            '2291': '临沧市',
            '2298': '保山市',
            '2304': '丽江市',
            '2309': '文山州',
            '2318': '红河州',
            '2332': '西双版纳州',
            '2336': '楚雄州',
            '2347': '大理州',
            '2360': '德宏州',
            '2366': '怒江州'
        },
        '26': {
            '3970': '阿里地区',
            '3971': '林芝地区',
            '2951': '拉萨市',
            '3107': '那曲地区',
            '3129': '山南地区',
            '3138': '昌都地区',
            '3144': '日喀则地区'
        },
        '27': {
            '2428': '延安市',
            '2442': '汉中市',
            '2454': '榆林市',
            '2468': '商洛市',
            '2476': '安康市',
            '2376': '西安市',
            '2386': '铜川市',
            '2390': '宝鸡市',
            '2402': '咸阳市',
            '2416': '渭南市'
        },
        '28': {
            '2525': '庆阳市',
            '2534': '陇南市',
            '2544': '武威市',
            '2549': '张掖市',
            '2556': '酒泉市',
            '2564': '甘南州',
            '2573': '临夏州',
            '3080': '定西市',
            '2487': '兰州市',
            '2492': '金昌市',
            '2495': '白银市',
            '2501': '天水市',
            '2509': '嘉峪关市',
            '2518': '平凉市'
        },
        '29': {
            '2580': '西宁市',
            '2585': '海东地区',
            '2592': '海北州',
            '2597': '黄南州',
            '2603': '海南州',
            '2605': '果洛州',
            '2612': '玉树州',
            '2620': '海西州'
        },
        '30': {
            '2628': '银川市',
            '2632': '石嘴山市',
            '2637': '吴忠市',
            '2644': '固原市',
            '3071': '中卫市'
        },
        '31': {
            '4110': '五家渠市',
            '4163': '博尔塔拉蒙古自治州阿拉山口口岸',
            '15945': '阿拉尔市',
            '15946': '图木舒克市',
            '2652': '乌鲁木齐市',
            '2654': '克拉玛依市',
            '2656': '石河子市',
            '2658': '吐鲁番地区',
            '2662': '哈密地区',
            '2666': '和田地区',
            '2675': '阿克苏地区',
            '2686': '喀什地区',
            '2699': '克孜勒苏州',
            '2704': '巴音郭楞州',
            '2714': '昌吉州',
            '2723': '博尔塔拉州',
            '2727': '伊犁州',
            '2736': '塔城地区',
            '2744': '阿勒泰地区'
        },
        '32': {
            '2768': '台湾市'
        },
        '42': {
            '2754': '香港特别行政区'
        },
        '43': {
            '2770': '澳门市'
        },
        '84': {
            '1310': '钓鱼岛'
        }
    };

    var param = {
        moduleStock: '[module-name="GoodsRec"] .jPic a img, [module-name="SearchList"] .jPic a img, [module-name="GoodsPage"] .jPic a img, [module-name="AllGoods"] .jPic a img',//需要显示库存状态的模块
        tagAttr: '[jshop="url"]', //价格伪属性
        domStock: '.jPic a', //需要显示库存状态的节点
        domStockState: 'li', //存储sku的节点
        domImg: '.jPic', //放置库存状态节点
        attrSkuName: 'data-sku', //存储sku的伪属性
        maxCount: 100, //一次性传入sku最大数量
        app: 'jshop_web', //系统接入名，李汪洋配置
        ch: 1, //商城PC（京东主站）：1 ;   商城app(手机app（含Pad）)：2; 商城m（m.jd.com手机浏览器）：3 【 m渠道（m.jd.com）目前无法区分，m暂时使用app渠道。库存接口中预留了m渠道，可以区分了再使用】微信：4;   手Q：5 ; 拍拍：6 ; 易讯PC:8；若您不再渠道列表当中，请联系库存组王振。
        area: CookieUtil.getCookie('ipLoc-djd') ? CookieUtil.getCookie('ipLoc-djd').replace(/-/g, ',') : 0, //用户所在区域，获取不到默认0
        coord: '', //非必传
        site: '', //非必传
        t: new Date().getTime(), //时间戳
        state: { 33: '现货', 34: '无货', 39: '在途', 36: '预订', 40: '可配货' }
    };

    try {
        param.area = param.area.split(',').map(function (v) {
            var index = v.indexOf('.');
            if (index !== -1) {
                return v.slice(0, index);
            } else {
                return v;
            }
        }).join(',');
    } catch (e) {
        console.log(e);
    }

    /** 模块内容刷新时使用 */
    w.moduleRefreshStock = function (obj) {
        if (!obj || !obj.length || param.area === 0) {
            return;
        }
        if (typeof obj === 'string') {
            obj = jQuery(obj);
        }

        var nodesModule = _price_unique(obj.find(param.tagAttr).closest(param.domStockState).find(param.domStock).toArray());
        if (!nodesModule.length) {
            return;
        }

        nodesShow = nodesModule;
        getData();
    };

    //预览页面2和二级页面浏览4使用了bigpipe加载，需要调用getRenderPrice；
    w.getRenderStock = _init;

    if (param.area == 0) {
        console.log('获取不到用户所在区域，不能显示库存状态');
        return;
    }
    var area = param.area.split(',');

    var nodes = [], //存储处理过的节点
        skuidStr = [], //拼装的sku字符串
        nodesShow = [],
        priceType = ['jsprice', 'jdprice', 'jspprice', 'jppprice', 'jtppprice', 'jtkpprice', 'jprice', 'jopprice'];

    var regSku = /^(https?:)?\/\/item\.jd\.com\/\d+\.html/, //验证sku链接
        reqGetSku = /\d+/g; //获取SKU

    /** 对获取到的节点对象进行处理：去重 */
    function _price_unique(arr) {
        if (!arr instanceof Array) throw new Error('_price_unique:arguments error');
        var __tem1 = {},
            __tem2 = [],
            __tem3 = [];
        for (var i = 0, len = arr.length; i < len; i++) {
            var __obj = jQuery(arr[i]),
                __sku;
            if (!__obj.attr('href')) {
                continue;
            }
            if (__obj.attr('href').match(reqGetSku)) {
                __sku = __obj.attr('href').match(reqGetSku)[0];
            }
            __obj.attr(param.attrSkuName, __sku); //存储data-sku，为下面的
            if (__tem1[__sku] == undefined) {
                __tem2.push(arr[i]);
                __tem1[__sku] = __obj.offset().top;
                __tem3.push(__sku);
            } else if (__tem1[__sku] > __obj.offset().top) {
                __tem2[__tem3.getIndex(__sku)] = arr[i];
                __tem1[__sku] = __obj.offset().top;
            }
        }
        return __tem2;
    }

    function initDom() {
        $(param.moduleStock).each(function (index, elem) {
            var $link = jQuery(elem).closest('a');//找到图片的父级链接节点
            var $item = $link.closest('li');//找到图片的父级li节点

            for (var i = 0; priceType[i]; i++) {
                if ($item.find('[' + priceType[i] + ']').length > 0) {
                    var price = $item.find('[' + priceType[i] + ']').html();//找到价格节点
                }
            }

            //价格加载完（因为有分区会修改页面的sku），才去初始化库存节点；
            if (
                Math.ceil(price) > 0 &&
                $link.attr('jshop') === undefined &&
                $link.attr('href') &&
                regSku.test($link.attr('href')) &&
                $link.attr('href').match(reqGetSku)
            ) {
                $link.attr('jshop', 'url').attr(param.attrSkuName, $link.attr('href').match(reqGetSku)[0]);
            }
        });
    }

    /** 获取处理过的节点数组 */
    function _get_nodes() {
        initDom();
        nodes = _price_unique(jQuery(param.tagAttr).closest(param.domStockState).find(param.domStock));
    }

    /** 获取商品价格*/
    function _load() {
        nodesShow = []; //初始化
        _get_nodes();

        var __top = jQuery(window).scrollTop() + jQuery(window).height();
        for (var i = 0, len = nodes.length; i < len; i++) { //遍历全部节点
            var __node = jQuery(nodes[i]);
            if (__node.offset().top < __top) { //当前页面上展示出来的节点，位置高度就会小于当前窗口和页面滚动条的和,有可能节点被
                nodesShow.push(nodes[i]); //展示出来的就存到临时数组
            }
        }
        getData();
    }

    /** 获取数据 */
    function getData() {
        var len = Math.ceil(nodesShow.length / param.maxCount);

        for (var i = 0; i < len; i++) {
            var skuFragment = nodesShow.slice(i * param.maxCount, Math.min(nodesShow.length, (i + 1) * param.maxCount));

            //拼装skuid字符串
            skuidStr = [];
            for (var j = 0; skuFragment[j]; j++) {
                if (jQuery(skuFragment[j]).attr('href').match(reqGetSku)) {
                    skuidStr.push(jQuery(skuFragment[j]).attr('href').match(reqGetSku)[0]);
                }
            }

            jQuery.ajax({
                url: INTERFACE.ss.areaStockState,
                data: {
                    app: param.app,
                    skuNum: skuidStr.join(';'),
                    ch: param.ch,
                    area: param.area,
                    coord: param.coord,
                    site: param.site,
                    t: param.t
                },
                dataType: 'jsonp',
                success: function (data) {
                    domOperate(skuFragment, data);
                }
            });

        }
    }

    /** 滚动时，获取商品价格*/
    function _event_register() {
        if (param.area == 0) {
            return;
        }
        var timer = 0;
        $(window).bind('scroll resize', function () {
            clearTimeout(timer);
            timer = setTimeout(_load, 500);
        });
    }

    function _init() {
        if (param.area === 0) {
            return;
        }
        _get_nodes();
        _load();
        _event_register();
    }

    //节点操作
    function domOperate(skuFragment, data) {

        var styleStock = '<style id="J_styleStock">' +
            '.d-stock{position:absolute;bottom:0;left:0;right:0;line-height:25px;height:25px; font-size:12px; color:#fff;filter:progid:DXImageTransform.Microsoft.gradient(enabled="true", ' +
            'startColorstr="#66000000", endColorstr="#66000000");background:rgba(0,0,0,.4);text-align:left; text-indent:10px;}' +
            '</style>',
            htmlStock = '<div class="d-stock">state</div>',
            sku;
        var updateFlag = false;

        for (var i = 0; skuFragment[i]; i++) {
            (function (i, sku) {
                sku = jQuery(skuFragment[i]).attr('href').match(reqGetSku)[0];
                if (data[sku] && data[sku].a === '34') { //20161202星期五 明书，只有是无货时才显示
                    var aNode = skuFragment[i];
                    var $liNode = $(aNode).closest('li');
                    var $picNode = $liNode.find('.jPic');
                    var $descNode = $liNode.find('.jDesc');

                    // 必须要开启补货并且图片节点与商品名称节点存在，才进行替换
                    if (isReplenish(aNode) && $picNode.length && $descNode.length) {
                        replenishRequest(sku).done(function (replenishInfo) {

                            var $priceNode = $liNode.find('[jdprice]');
                            var $hrefNode = $liNode.find('a[href*="item.jd.com"]');
                            var _replenishInfo = replenishInfo[sku];
                            if (_replenishInfo) {
                                // 替换图片
                                $picNode.find('img').attr('src', _replenishInfo.imageurl);

                                // 替换商品名称
                                $descNode.text(_replenishInfo.wname).attr('title', _replenishInfo.wname);

                                // a标签节点
                                $hrefNode.attr('href', _replenishInfo.detailInfoLink);

                                // data-sku节点
                                $liNode.find('[data-sku]').attr('data-sku', _replenishInfo.goodsId);

                                // 价格节点
                                $priceNode.text(_replenishInfo.price).attr({
                                    'jdprice': _replenishInfo.goodsId
                                });
                            }
                            noStockProcess();
                        });
                    } else {
                        noStockProcess();
                    }

                    function noStockProcess() {
                        if (jQuery('#J_styleStock').length === 0) { //判断当前页面上是否已经有无货样式
                            jQuery('body').append(styleStock);
                        }
                        jQuery('a[' + param.attrSkuName + '=' + sku + ']').each(function (index, n) {
                            var currentImgNode = jQuery(n).parent();

                            if (!currentImgNode.data('isStock')) {
                                if (currentImgNode.css('position') === 'static') { //如果当前图片节点没有相对定位或绝对定位属性
                                    currentImgNode.css('position', 'relative');
                                }
                                currentImgNode.find('.d-stock').remove();
                                currentImgNode.append(htmlStock.replace(/state/, json_city[0][area[0]] + param.state[data[sku].a])).data('isStock', true);
                                var currentNode = currentImgNode.closest('li');
                                // 判断当前模块是否允许重新排序。20161230，赵增俊，主要是防止设计师模板在重新排序后商品展示错乱。
                                if (!(currentNode.closest('.j-module').attr('module-function') && currentNode.closest('.j-module').attr('module-function').indexOf('ridSort') != -1)) {
                                    // 如果当前商品是已售罄状态，就不需要再移动
                                    if (!currentNode.hasClass('d-sold-out')) {
                                        updateFlag = true;
                                        if (currentNode.closest('ul').find('.d-sold-out').length) {
                                            // 将无货的商品移动到模块中已售罄商品之前
                                            $(currentNode.closest('ul').find('.d-sold-out')[0]).before(currentNode);
                                        } else {
                                            // 将无货的商品放到模块最后，
                                            currentNode.closest('ul').append(currentNode);
                                        }
                                        // 重新执行autoFill方法
                                        moduleFunctionRefresh.call(currentNode.closest('.j-module'), 'autoFill');
                                        moduleFunctionRefresh.call(currentNode.closest('.j-module'), 'autoQuene');
                                    }
                                }
                            }
                        });
                    }
                }
            }(i, sku));
        }
        if (updateFlag) {
            jQuery(w).trigger('scroll');
        }
    }

    function isReplenish(node) {
        var $moduleRoot = $(node).closest('[module-name="GoodsRec"]');
        return ($moduleRoot.length > 0 && $moduleRoot.attr('needreplenishment') === '1');
    }

    function replenishRequest(skuId) {
        var promise = $.Deferred();
        var skuIds = skuId;

        var optionalFieldList = [];

        $.ajax({
            url: INTERFACE.zhongtai.service,
            data: {
                functionId: 'skuReplace',
                platformId: 1,
                skuIds: skuIds,
                area: param.area
            },
            dataType: 'jsonp',
            success: function (data) {
                if (data.code === 200 && data.data && data.data.stockingGoodsMap) {
                    promise.resolve(data.data.stockingGoodsMap);
                } else {
                    promise.resolve({});
                }
            },
            error: function (data) {
                promise.resolve({});
            }
        });
        return promise;
    }

    jQuery(function () {
        var pageType = getPageType();
        if (pageType != 2 && pageType != 4) {
            _init();
        }
    });

})(window);

/**
 * 因为其他方法里面有这样调用，这块定义暂不修改
 * jshop.component.getPrice = moduleRefreshPM; //用在模块刷新时
 * skuIdPriceObj.localPriceRefresh = moduleRefreshPM; //用在前端拼装数据展示时
 */

/*
jshop.component.getPrice = skuIdPriceObj.localPriceRefresh = function(obj){
	if(window.moduleRefreshP){moduleRefreshP(obj)};
	if(window.moduleRefreshPM){moduleRefreshPM(obj)};
	if(window.moduleRefreshStock){moduleRefreshStock(obj);}//有时获取不到用户区域
}*/
/*
 * @function：从render.lib.js中拆分
 * @author：cdwanchuan@jd.com 2016-07-27
*/


/****************************************************Message Box*****************************************/
/*
 * 在UI.dialog基础上做二次开发
 * 依赖于UI.dialog
 */
message_box = (function(){
    var _box = null,_timer,_duration = 2000,_speed = 300,_messages = [];
    /*
     * 初始化 message box
     */
    function _init(cnt){
        if(!_box){
            var dialog = UI.dialog.open({
                type : 1,
                sContent : cnt,
                nBtn : 2,
                sStyle : 'userDef',
                sAnimate : {left:0,top:1}
            });
            _box = dialog.oPopup;
            _box.css('zIndex',2147483640);
        }

    }

    /*
     * 添加消息至消息队列，如果消息队列为空并且timer为null。开始显示message
     */
    function _add(cnt){
        var __flag = !_messages.length&!_timer;
        _messages.push(cnt);
        if(!!__flag){
            _show();
        }
    }

    /*
     * 显示message box
     */
    function _show(){
        var __callee = arguments.callee;
        if(_messages.length){
            var _cnt = _messages.shift();
            _box.html(_cnt);

            _box.show().animate({top:'-4px'},_speed,function(){
                _timer = setTimeout(function(){
                    _box.animate({top : -_box.outerHeight() + 'px'},_speed,function(){
                        _clear();
                        __callee();
                    });
                },_duration);
            });
        }
    }

    /*
     * 清除timer
     */
    function _clear(){
        clearTimeout(_timer);
        _timer = null;
        _box.clearQueue();
    }


    return function(str,type){
        var _str = '<div class="dialog-area">' + gConfig.assembles.dialog_content(str,type) + "</div>";
        _init('');
        _add(_str);
    };
})();/*
 * @function：从render.lib.js中拆分
 * @author：cdwanchuan@jd.com 2016-07-27
*/

/****************************************************Image Lazyload*****************************************/

(function($,w){
    var _lazy_class = 'J_imgLazyload',
        _orginal_src = 'original',
        _window = $(window),
        _body = $('body');
    var _pageType = getPageType();

    function miniImgs (url, dig) {
        // 图片空间不支持gif图片降质
        if (url.match(/gif$/i)) {
            return url;
        } else {
            var newUrl = url;
            // 只支持url类型的图片，不支持base64类型的图片
            if (url.match(/^(https?:)?\/\//)) {
                // 替换imgzone，这个业务分区的图片不支持图片降质
                newUrl = newUrl.replace('imgzone', 'cms');

                var markIndex = url.indexOf('!');
                if (markIndex === -1) {
                    // 如果url没有参数
                    if (!url.match(/!q[1-9]0/)) {
                        newUrl = newUrl + dig;
                    }
                } else {
                    // 如果已经有参数了，但是还没有降质参数，!q90降质要加在前面
                    if (!url.match(/!q[1-9]0/)) {
                        // newUrl = newUrl + '!q90';
                        newUrl = newUrl.substring(0,markIndex) + dig + newUrl.substring(markIndex);
                    }
                }
                // 添加jpg参数
                if (!url.match(/\.jpg/)) {
                    newUrl = newUrl + '.jpg';
                }
                // if (navigator.userAgent.match(/Chrome/i) && !url.match(/\.webp/)) {
                //     // webp是chrome的图片格式
                //     newUrl += '.webp';
                // }
            }
        }
        return newUrl;
    }

    function _load(){
        var __scroll = _window.scrollTop(),
            __winHeitht = _window.height(),
            /*有些商家会把自定义内容区高度设置得远远超过电脑屏幕高度，造成滚动到某个位置时，当前屏获取不到图片，所以懒加载就加载小于当前屏的所有图片*/
            // __min = __scroll ? __scroll - __winHeitht / 4 : 0,    //非首屏加载回退0.25屏
            __min = __scroll ? __scroll - __winHeitht * 0.5 : 0,    //加载回退1屏，防止图片底部在可见区域顶部在不可见区域的情况。
            __top = __scroll ? __scroll + __winHeitht * 1.5 : __winHeitht, //首屏加载1屏，其他加载1.5屏
            _imgs = $('body [' + _orginal_src + ']').filter(function(){
                var __thisTop = $(this).offset().top,
                    __thisBottom = __thisTop + $(this).height();
                return (__thisTop <= __top &&  __thisTop >= __min) || (__thisBottom <= __top &&  __thisBottom >= __min) && $(this).is(':visible');
            });
        for(var i = 0, len = _imgs.length; i < len; ++i){
            var __img = $(_imgs[i]);
            if(__img.attr(_orginal_src)){
                // if(_pageType === 1){ // node只渲染首页，其他页面还是走老逻辑
                //     __img.removeClass(_lazy_class).attr('src', __img.attr(_orginal_src)).removeAttr(_orginal_src);
                // }else{
                //     __img.removeClass(_lazy_class).attr('src', miniImgs(__img.attr(_orginal_src), '!q90')).removeAttr(_orginal_src);
                // }
                var _origin_src = __img.attr(_orginal_src);
                __img.addClass(_lazy_class);
                __img.attr('src',miniImgs(_origin_src, '!q90')).removeAttr(_orginal_src);
                __img[0].onload = function () {
                    $(this).removeClass(_lazy_class);
                }
            }
        }

    }

    function start(){
        _load();

        //常规绑定
        var scrollTimer = 0;
        _window.scroll(function(){
            clearTimeout(scrollTimer);
            scrollTimer = setTimeout(_load, 150);
        });
        var resizeTimer = 0;
        _window.resize(function(){
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(_load,100);
        });

        _window.trigger('scroll');
        //解决用户通过自定义内容区、模板里的js代码自己实现点击、mouseover两种触发类型的tab切换，造成的没有调用图片懒加载问题
        var timer = 0;
        _body.bind('mousemove', function(){
            clearTimeout(timer);
            timer = setTimeout(_load, 100);
        });
        _body.bind('click', _load);
    }

    $(function(){
        start();
    });
    w.getRenderImg = start;

})(jQuery,window);
/*
 * @function：从render.lib.js中拆分
 * @author：cdwanchuan@jd.com 2016-07-27
*/

(function(){
    var cssId = '.J-cart';
    // 为加入购物车按钮绑定事件
    $(function(){
        $('.layout-main').delegate(cssId,'click',function(){
            var sku = $(this).attr('itemid');
            try{
                $.ajax({
                    url : '//cart.jd.com/cart/dynamic/gate.action?pid='+sku+'&pcount=1&ptype=1&callback=?',
                    type : 'get',
                    dataType : 'jsonp',
                    success : function(){

                    }
                });
            } catch(e) {

            }

            var dialog  = '';
            dialog += '<div class="m tip-success" id="add-to-cart">';
            dialog += '<div class="mt fl icon"></div>';
            dialog += '<div class="mc lh">';
            dialog += '<div class="c-title"><strong>添加成功</strong></div>';
            dialog += '<div class="c-btn">';
            dialog += '<a class="c-checkout" href="//cart.jd.com/cart/cart.html" target="_blank">去购物车结算</a>';
            dialog += '<a class="c-return" href="#none" onclick="jdThickBoxclose()">继续购物</a>';
            dialog += '</div><a href="#" class="thickclose" id="">×</a></div></div>';
            dialog += '<style>';
            dialog += '#add_to_cart_div{display:none}';
            dialog += '#add-to-cart,#cart-reco{width:452px;margin-left:10px;overflow:hidden}';
            dialog += '#add-to-cart{margin-bottom:20px}';
            dialog += '#add-to-cart .icon{width:50px;height:50px;margin-right:10px;background-image:url(i/item-icon.png);';
            dialog += 'background-repeat:no-repeat;*display:inline}';
            dialog += '#add-to-cart .c-title strong{font:400 18px "microsoft yahei"}';
            dialog += '#add-to-cart.tip-success .c-title{color:#7abd54}';
            dialog += '#add-to-cart .c-count{color:#999;line-height:22px}';
            dialog += '#add-to-cart .c-btn{padding-top:5px}#add-to-cart ';
            dialog += '.c-btn a{height:36px;background-image:url(';
            dialog += '//misc.360buyimg.com/purchase/skin/i/20130425D.png);';
            dialog += 'display:inline-block;overflow:hidden;line-height:100px;*zoom:1}';
            dialog += '#add-to-cart .c-btn .c-checkout{width:189px;margin-right:8px;background-position:0 0}';
            dialog += '#add-to-cart .c-btn .c-return{width:94px;background-position:-90px -37px}';
            dialog += '#cart-reco{border-top:1px solid #ddd;padding-top:20px;margin-bottom:0}';
            dialog += '#cart-reco .mc{height:170px}';
            dialog += '#cart-reco .lh li{width:100px;padding:6px 6px 0}';
            dialog += '#cart-reco .lh li .p-name{height:3em;line-height:1.5em;overflow:hidden}';
            dialog += '</style>';

            $.jdThickBox({
                source : dialog,
                width : 492,
                height : 90,
                title : '加入购物车'
            });
        });
    });
})();

