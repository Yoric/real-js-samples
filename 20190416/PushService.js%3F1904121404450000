const CHROME_TYPE = 12;

class PushService {

    constructor(type) {
        this.type = type || CHROME_TYPE;
    }

    checkSubscription() {}

    subscribe() {}

    unsubscribe() {}

    checkSavedSubscription(token) {
        return new Promise((resolve, reject) => {
            fetch(`/common/PushCheck?token=${token}`, {
                method: 'POST',
                mode: 'cors',
                headers: {
                    "Content-Type": "application/json"
                },
            }).then(response => {
                if (response.status == 200) {
                    resolve(true);
                } else if (response.status == 404) {
                    resolve(false);
                } else {
                    reject({message : 'Server returned status ' + response.status})
                }
            }).catch(e => {
                reject(e);
            })
        })
    }

    sendTokenToServer(token) {
        return new Promise((resolve, reject) => {
            fetch(`/common/pushadd?type=${this.type}&token=${token}`, {
                method: 'POST',
                mode: 'cors',
                headers: {
                    "Content-Type": "application/json"
                },
            }).then(response => {
                response.status == 200 ? resolve() : reject({message : 'Server returned status ' + response.status});
            }).catch(e => {
                reject(e)
            })
        })
    }

    deleteTokenFromServer(token) {
        return new Promise((resolve, reject) => {
            fetch(`/common/pushremove?token=${token}`, {
                method: 'POST',
                mode: 'cors',
                headers: {
                    "Content-Type": "application/json",
                },
            }).then(response => {
                response.status == 200 ? resolve() : reject({message : 'Server returned status ' + response.status});
            }).catch(e => {
                reject(e)
            })
        });
    }
}