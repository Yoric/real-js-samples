(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{Cjzi:function(e,n,t){"use strict";t.r(n);var a,i=t("mrSG"),r=t("q1tI"),o=t("fvjX"),s=t("yR8l"),l=t("GnwI"),m=t("vlTn"),d=t("0LAi"),c=t("4HIT"),u=t("Ue10"),g=t("kmde");!function(e){e.Container="realtime_stream_tag_list_container_selector"}(a||(a={}));var k=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.reportInteractive=function(){n.props.data.user&&n.props.latencyTracking.reportInteractive()},n}return i.__extends(n,e),n.prototype.componentDidMount=function(){this.reportInteractive()},n.prototype.componentDidUpdate=function(e){e.gameID&&e.gameID!==this.props.gameID&&this.props.data.refetch(),this.reportInteractive()},n.prototype.render=function(){if(this.props.data.loading)return r.createElement(m.a,null);var e=this.props.data.user;if(!e||!e.stream||!e.stream.id)return null;var n=null,t=null;return e.stream.tags&&(n=e.stream.tags),e.stream&&e.stream.game&&e.stream.game.gameTags&&(t=e.stream.game.gameTags),r.createElement(u.fb,{"data-test-selector":a.Container},n&&r.createElement(d.a,{tags:n,linkTo:c.a.PopularTag}),t&&r.createElement(d.a,{tags:t,linkTo:c.a.DirectoryTag}))},n}(r.Component),p=Object(o.compose)(Object(l.withLatencyTracking)("RealtimeStreamTagList"),Object(s.a)(g,{options:function(e){return{pollInterval:6e5,fetchPolicy:"cache-and-network",variables:{channelLogin:e.channelLogin}}}}))(k);t.d(n,"TestSelectors",function(){return a}),t.d(n,"RealtimeStreamTagListComponent",function(){return k}),t.d(n,"RealtimeStreamTagList",function(){return p})},kmde:function(e,n,t){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"RealtimeStreamTagList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"channelLogin"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"user"},arguments:[{kind:"Argument",name:{kind:"Name",value:"login"},value:{kind:"Variable",name:{kind:"Name",value:"channelLogin"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"stream"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tags"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"tagFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"game"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"gameTags"},name:{kind:"Name",value:"tags"},arguments:[{kind:"Argument",name:{kind:"Name",value:"tagType"},value:{kind:"EnumValue",value:"CONTENT"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"tagFragment"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:248}};a.loc.source={body:'#import "twilight/features/tags/models/tag-fragment.gql"\nquery RealtimeStreamTagList($channelLogin: String!) {\nuser(login: $channelLogin) {\nid\nstream {\nid\ntags {\n...tagFragment\n}\ngame {\nid\ngameTags: tags(tagType: CONTENT) {\n...tagFragment\n}\n}\n}\n}\n}',name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};a.definitions=a.definitions.concat(function(e){return e.filter(function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!i[n]&&(i[n]=!0,!0)})}(t("iiOx").definitions)),e.exports=a}}]);