var AuthType;(function(a){a[a.aad=1]="aad";a[a.msa=2]="msa"})(AuthType||(AuthType={}));var Operation;(function(a){var b="Redirect";a[a[b]=1]=b;a[a.Error=2]="Error"})(Operation||(Operation={}));var ErrorCode;(function(a){var e="UnknownError",d="NoAccountFound",c="InvalidDataReceivedFromIdp",b="InvalidConfigurations";a[a[b]=100]=b;a[a[c]=105]=c;a[a[d]=110]=d;a[a.TimeOut=115]="TimeOut";a[a[e]=120]=e})(ErrorCode||(ErrorCode={}));var TimerUtils;(function(a){function b(){var a=+new Date;return{get seconds(){return Math.ceil((+new Date-a)/1e3)},get ms(){return+new Date-a},get formattedSeconds(){return Math.ceil(this.seconds()/1e3)+"s"},get formattedMs(){return this.ms()+"ms"}}}a.timer=b})(TimerUtils||(TimerUtils={}));var IframeUtils;(function(a){function c(c,b){var a=document.createElement("iframe");a.style.display="none";a.id=b;a.src=c;return a}a.getIframe=c;function b(b){if(typeof b=="undefined"||b==null)return false;var a=document.getElementById(b);a!=null&&a.parentNode!=null&&a.parentNode.removeChild(a);return true}a.deleteIframe=b})(IframeUtils||(IframeUtils={}));var Constants;(function(a){var c=function(){function a(){}return a}();c.msaMeSrf="/Me.srf?wa=wsignin1.0&wreply=";c.aadSavedUsers="/savedusers?wreply=";a.UriFormats=c;var d=function(){function a(){}return a}();d.http="http";d.https="https";a.UriScheme=d;var e=function(){function a(){}return a}();e.separator="://";a.UriSeparator=e;var b=function(){function a(){}return a}();b.remembered="1";b.signedIn="2";b.interrupted="3";a.AuthState=b;var f=function(){function a(){}return a}();f.msaFed="MSAFED";a.Idp=f})(Constants||(Constants={}));var LoggingUtils;(function(b){function a(b,a){return a!=null&&a!==undefined&&!a?false:b==null&&b===undefined?false:true}function e(b,c){if(!a(b,c))return;console.log(b)}b.log=e;function d(b,c){if(!a(b,c))return;console.warn(b)}b.warn=d;function c(b,c){if(!a(b,c))return;console.error(b)}b.error=c})(LoggingUtils||(LoggingUtils={}));var IdpUserResult=function(){function a(a){var b=this;b.upn=a.upn;b.totalSignedInUsers=a.totalSignedInUsers;b.validSignedInUsers=a.validSignedInUsers;b.errorMessage=a.errorMessage}a.prototype.containsValidUser=function(){var c=false,b=null,a=this;return a.errorMessage!=b&&a.errorMessage!==undefined&&a.errorMessage!==""?c:a.totalSignedInUsers==b||a.totalSignedInUsers===undefined||a.totalSignedInUsers<1?c:a.upn==b||a.upn===undefined||a.upn===""?c:a.validSignedInUsers==b||a.validSignedInUsers===undefined||a.validSignedInUsers<1?c:true};return a}(),DefaultSignInOptions=function(){var b=false,a=null;function c(c){var d=this;d.options=c;d.preferredIdp=c.preferredIdp;d.aadConfig=c.aadConfig;d.msaConfig=c.msaConfig;d.enableConsoleLogging=c.enableConsoleLogging;if(c.msaFedEnabled==a||c.msaFedEnabled===undefined)d.msaFedEnabled=b;else d.msaFedEnabled=c.msaFedEnabled}c.prototype.isValid=function(){var c=this,d;if(c.preferredIdp==a||c.preferredIdp===undefined){d="preferredIdp  is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(AuthType[c.preferredIdp]!==AuthType[AuthType.aad]&&AuthType[c.preferredIdp]!==AuthType[AuthType.msa]){d="preferredIdp is set to something other than 'AAD' and 'MSA'.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if((c.aadConfig==a||c.aadConfig===undefined)&&(c.msaConfig==a||c.msaConfig===undefined)){d="Both AAD and MSA configurations are null or undefined. At least one of the IDP configurations should be set.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(c.aadConfig!==a&&c.aadConfig!==undefined){if(c.aadConfig.appId==a||c.aadConfig.appId===undefined||c.aadConfig.appId===""){d="AadConfig: appId is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(c.aadConfig.host==a||c.aadConfig.host===undefined||c.aadConfig.host===""){d="AadConfig: host is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(c.aadConfig.replyUri==a||c.aadConfig.replyUri===undefined||c.aadConfig.replyUri===""){d="AadConfig: replyUri is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}}if(c.msaConfig!==a&&c.msaConfig!==undefined){if(c.msaConfig.host==a||c.msaConfig.host===undefined||c.msaConfig.host===""){d="MsaConfig: host is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(c.msaConfig.replyUri==a||c.msaConfig.replyUri===undefined||c.msaConfig.replyUri===""){d="MsaConfig: replyUri  is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}}if(c.msaFedEnabled==a||c.msaFedEnabled===undefined){d="msaFedEnabled is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}if(c.enableConsoleLogging==a||c.enableConsoleLogging===undefined){d="enableConsoleLogging is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return{isPassed:b,errorMessage:d}}LoggingUtils.log("Validation of configurations options finished successfully.",enableConsoleLog);return{isPassed:true,errorMessage:a}};return c}();function getDefaultAadUser(a){var f="aadData.userList[",d=null,b;if(a==d||a===undefined){b="Null or Undefined AAD user data.";LoggingUtils.log(b,enableConsoleLog);return{upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}if(a.error!=d&&a.error!==""){b="Error '"+a.error+"' found in the data.";LoggingUtils.log(b,enableConsoleLog);return{upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}if(a.userList==d||a.userList===undefined){b="AAD UserList is null or undefined.";LoggingUtils.log(b,enableConsoleLog);return{upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}if(a.userList.length<=0){b="No signed in AAD user found.";LoggingUtils.log(b,enableConsoleLog);return{upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}for(var e=[],c=0;c<a.userList.length;c++){if(a.userList[c]==d||a.userList[c]===undefined){LoggingUtils.warn(f+c+"] is null or undefined. Skipping this entry.",enableConsoleLog);continue}if(a.userList[c].idp.toLocaleUpperCase()===Constants.Idp.msaFed&&!msaFedEnabled){LoggingUtils.warn(f+c+"] is for MsaFed. Skipping this entry based on provided configuration.",enableConsoleLog);continue}if(a.userList[c].memberName==d||a.userList[c].memberName===undefined||a.userList[c].memberName===""){LoggingUtils.warn("Member name (i.e. UPN/email-address) is null, undefined or empty. This is unexpected. Skipping "+c+" entry.",enableConsoleLog);continue}if(a.userList[c].authenticatedState!==Constants.AuthState.signedIn){LoggingUtils.warn(a.userList[c].memberName+"'s authState is '"+a.userList[c].authenticatedState+"'. Skipping this entry.",enableConsoleLog);continue}e.push(a.userList[c])}if(e.length!==1){b="Found '"+e.length+"' AAD users in required "+Constants.AuthState.signedIn+" auth state.Returning null UPN. Null UPN is an expected response so after re-direction to AAD portal user is given choice to choose specific UPN to sign in with.";LoggingUtils.log(b,enableConsoleLog);return{upn:d,validSignedInUsers:e.length,totalSignedInUsers:a.userList.length,errorMessage:b}}if(e.length===1)return{upn:e[0].memberName,validSignedInUsers:e.length,totalSignedInUsers:a.userList.length};b="Unknown error occurred while finding default signed in AAD user.";LoggingUtils.error(b,enableConsoleLog);return{upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}function getDefaultMsaUser(b){var c=null,a;if(b==c||b===undefined){a="Null or Undefined MSA user data.";LoggingUtils.log(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.error!=c&&b.error!==""){a="Error '"+b.error+"' found in the data.";LoggingUtils.log(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.userList==c||b.userList===undefined){a="MSA UserList is null or undefined.";LoggingUtils.log(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.userList.length<=0){a="No signed in MSA user found.";LoggingUtils.log(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.userList.length>1){a="Found '"+b.userList.length+"' signed in MSA users. This is an unexpected scenario.";LoggingUtils.log(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}if(b.userList.length===1){if(b.userList[0]==c||b.userList[0]===undefined){a="Null or undefined MSA user data found. This is unexpected.";LoggingUtils.error(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}if(b.userList[0].memberName==c||b.userList[0].memberName===undefined||b.userList[0].memberName===""){a="Member name (i.e.UPN / email - address) is null, undefined or empty. This is unexpected.";LoggingUtils.error(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}else return{upn:b.userList[0].memberName,validSignedInUsers:b.userList.length,totalSignedInUsers:b.userList.length}}a="Unknown error occurred while finding default signed in MSA user.";LoggingUtils.error(a,enableConsoleLog);return{upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}function findDefaultSignedInUser(e,m,l,i,h){var g=true,f=false,a=null,k=getDefaultMsaUser(m),j=getDefaultAadUser(l),d;if(k==a||j==a){d={preferredIdp:AuthType[e],signedInMsa:0,signedInAad:0,totalSignedIn:0,timeForMsaInMsec:0,timeForAadInMsec:0,foundDefault:f,foundPreferred:f,errorCode:ErrorCode[ErrorCode.InvalidDataReceivedFromIdp],errorMessage:"Data received from AAD or MSA wasn't expected."};return{op:Operation[Operation.Error],idp:AuthType[e],upn:a,errorCode:ErrorCode[ErrorCode.InvalidDataReceivedFromIdp],telemetry:d}}var c=new IdpUserResult(k),b=new IdpUserResult(j);if(AuthType[e]===AuthType[AuthType.aad]&&b.containsValidUser()){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:b.totalSignedInUsers,totalSignedIn:c.totalSignedInUsers+b.totalSignedInUsers,timeForMsaInMsec:i,timeForAadInMsec:h,foundDefault:g,foundPreferred:g,errorCode:a,errorMessage:a};return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:b.upn,errorCode:a,telemetry:d}}if(AuthType[e]===AuthType[AuthType.aad]&&b.validSignedInUsers>1){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:b.totalSignedInUsers,totalSignedIn:c.totalSignedInUsers+b.totalSignedInUsers,timeForMsaInMsec:i,timeForAadInMsec:h,foundDefault:f,foundPreferred:g,errorCode:a,errorMessage:a};return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:a,errorCode:a,telemetry:d}}if(AuthType[e]===AuthType[AuthType.msa]&&c.containsValidUser()){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:b.totalSignedInUsers,totalSignedIn:c.totalSignedInUsers+b.totalSignedInUsers,timeForMsaInMsec:i,timeForAadInMsec:h,foundDefault:g,foundPreferred:g,errorCode:a,errorMessage:a};return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.msa],upn:c.upn,errorCode:a,telemetry:d}}d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:b.totalSignedInUsers,totalSignedIn:c.totalSignedInUsers+b.totalSignedInUsers,timeForMsaInMsec:i,timeForAadInMsec:h,foundDefault:g,foundPreferred:f,errorCode:a,errorMessage:a};if(b.containsValidUser())return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:b.upn,errorCode:a,telemetry:d};if(b.validSignedInUsers>1)return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:a,errorCode:a,telemetry:d};if(c.containsValidUser())return{op:Operation[Operation.Redirect],idp:AuthType[AuthType.msa],upn:c.upn,errorCode:a,telemetry:d};d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:b.totalSignedInUsers,totalSignedIn:c.totalSignedInUsers+b.totalSignedInUsers,timeForMsaInMsec:i,timeForAadInMsec:h,foundDefault:f,foundPreferred:f,errorCode:ErrorCode[ErrorCode.NoAccountFound],errorMessage:a};return{op:Operation[Operation.Error],idp:a,upn:a,errorCode:ErrorCode[ErrorCode.NoAccountFound],telemetry:d}}function convertAadUserData(b){var a=null;if(b==a||b===undefined||b===""){LoggingUtils.log("Empty AAD user data. Returning null.",enableConsoleLog);return a}var c;try{var d=JSON.parse(b);c=d}catch(e){LoggingUtils.error("Exception occurred while parsing received MSA data. Returning null. Exception details: "+e.message+".",enableConsoleLog);return a}if(typeof c==="undefined"){LoggingUtils.error("Couldn't parse provided AAD user data. Returning null.",enableConsoleLog);return a}return c}function convertMsaUserData(b){var a=null;if(b==a||b===undefined||b===""){LoggingUtils.log("Empty MSA user data. Returning null.",enableConsoleLog);return a}var c;try{var d=JSON.parse(b);c=d}catch(e){LoggingUtils.error("Exception occurred while parsing received MSA data. Returning null. Exception details: "+e.message+".",enableConsoleLog);return a}if(typeof c==="undefined"){LoggingUtils.error("Couldn't parse provided MSA user data. Returning null.",enableConsoleLog);return a}return c}function getAadData(a,f){if(a===null||a===undefined){LoggingUtils.log("AAD config data is null or undefined. Skipping getting users data from AAD.",enableConsoleLog);f(null)}else{var d="aadIframe",e="message",b;function c(g){var h=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host;if(g.origin.toLocaleUpperCase()===h.toLocaleUpperCase()){b=g.data;LoggingUtils.log("Data received from AAD PostMessage: "+b,enableConsoleLog);window.removeEventListener(e,c);IframeUtils.deleteIframe(d);f(b)}}window.addEventListener(e,c,false);var g=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host+Constants.UriFormats.aadSavedUsers+a.replyUri+"&appid="+a.appId,h=IframeUtils.getIframe(g,d);document.body.appendChild(h)}}function getMsaData(a,f){if(a===null||a===undefined){LoggingUtils.log("MSA config data is null or undefined. Skipping getting users data from MSA.",enableConsoleLog);f(null)}else{var d="msaIframe",e="message",b;function c(g){var h=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host;if(g.origin.toLocaleUpperCase()===h.toLocaleUpperCase()){b=g.data;LoggingUtils.log("Data received from MSA PostMessage: "+b,enableConsoleLog);window.removeEventListener(e,c);IframeUtils.deleteIframe(d);f(b)}}window.addEventListener(e,c,false);var h=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host+Constants.UriFormats.msaMeSrf+a.replyUri,g=IframeUtils.getIframe(h,d);document.body.appendChild(g)}}function getAadMsaData(e,h){var b,a,d,c,f=TimerUtils.timer(),g=function(g,e){if(g!==undefined){b=g;d=f.ms;LoggingUtils.log("Time taken to Msa user data: "+d,enableConsoleLog)}else if(e!==undefined){a=e;c=f.ms;LoggingUtils.log("Time taken to get AAD user data: "+c,enableConsoleLog)}b!==undefined&&a!==undefined&&h(b,d,a,c)};getMsaData(e.msaConfig,function(a){g(a,undefined)});getAadData(e.aadConfig,function(a){g(undefined,a)})}var enableConsoleLog=false,msaFedEnabled=false;function getAccount(a,f){var d=false,b=null,e,c;if(a===undefined||a===b){c="configurations cannot be null or undefined.";LoggingUtils.error(c,enableConsoleLog);e={preferredIdp:b,signedInMsa:0,signedInAad:0,totalSignedIn:0,timeForMsaInMsec:0,timeForAadInMsec:0,foundDefault:d,foundPreferred:d,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],errorMessage:c};f({op:Operation[Operation.Error],idp:b,upn:b,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],telemetry:e})}else{enableConsoleLog=a.enableConsoleLogging;var h=new DefaultSignInOptions(a),g=h.isValid();if(!g.isPassed){c=g.errorMessage;LoggingUtils.error(c,enableConsoleLog);e={preferredIdp:b,signedInMsa:0,signedInAad:0,totalSignedIn:0,timeForMsaInMsec:0,timeForAadInMsec:0,foundDefault:d,foundPreferred:d,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],errorMessage:c};f({op:Operation[Operation.Error],idp:b,upn:b,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],telemetry:e})}else{msaFedEnabled=a.msaFedEnabled;getAadMsaData(a,function(d,g,b,e){var c=findDefaultSignedInUser(a.preferredIdp,convertMsaUserData(d),convertAadUserData(b),g,e);f(c)})}}};